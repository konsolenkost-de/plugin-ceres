{"version":3,"sources":["webpack:///resources/js/src/app/components/basket/AddToBasket.vue","webpack:///./resources/js/src/app/components/basket/AddToBasket.vue?4bec","webpack:///./resources/js/src/app/components/basket/AddToBasket.vue","webpack:///./resources/js/src/app/components/basket/AddToBasket.vue?d882","webpack:///./resources/js/src/app/components/basket/AddToBasket.vue?8258","webpack:///./resources/js/src/app/mixins/buttonSizeProperty.mixin.js"],"names":["BUTTON_SIZES","LEGACY_CLASS_MAP","ButtonSizePropertyMixin","props","buttonSize","type","String","default","validator","value","Object","keys","indexOf","computed","buttonSizeClass","hasOwnProperty"],"mappings":"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kBAtGA,0BAsGA,KAtGA,EAuGA;AACA;AACA;AAzGA,GA1MA;AAsTA,SACA;AACA,YADA,oBACA,KADA,EAEA;AACA,kGACA;AACA;AACA;AACA;AACA,KARA;AAUA,0BAVA,kCAUA,KAVA,EAWA;AACA,mCACA;AACA;AACA;AACA,KAhBA;AAkBA,gBAlBA,wBAkBA,KAlBA,EAmBA;AACA,yBACA;AACA;AACA;AACA;AAxBA;AAvTA;;AAmVA,wDACA;AACA;AACA;AAEA,mDACA;AACA,iHACA;AACA;;AAEA,4CACA,yFADA,IAEA,iDAFA,EAGA;AACA;AACA;;AAEA;AAEA;AACA,+BADA;AAEA,gCAFA;AAGA,iCAHA;AAIA;AAJA;AAMA;AACA,GAtBA;AAwBA;AACA,4BADA;AAEA;AAFA;AAIA,C;;;;;;;;;;;;AC3cA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wCAAwC;AAClE;AACA,oBAAoB,qCAAqC;AACzD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,sBAAsB;AACtB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wCAAwC;AAClE;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,WAAW;AACX;AACA,uBAAuB,yCAAyC;AAChE;AACA;AACA,iBAAiB,0CAA0C;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,wCAAwC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,gCAAgC;AAChC,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2CAA2C;AACzE;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,gCAAgC;AAChC,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,wCAAwC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,qBAAqB;AACrB;AACA;AACA,gCAAgC;AAChC,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kCAAkC,+BAA+B,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qCAAqC;AACrE,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,kCAAkC;AAClC,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClRA;AAAA;AAAA;AAAA;AAA0F;AAC3B;AACL;;;AAG1D;AACsG;AACtG,gBAAgB,2GAAU;AAC1B,EAAE,iFAAM;AACR,EAAE,sFAAM;AACR,EAAE,+FAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACtCf;AAAA;AAAA,wCAAmM,CAAgB,+OAAG,EAAC,C;;;;;;;;;;;;ACAvN;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,IAAMA,YAAY,GAAG,CAAC,QAAD,EAAW,QAAX,CAArB;AAEA,IAAMC,gBAAgB,GAAG;AACrB,QAAM,QADe;AAErB,QAAM,EAFe;AAGrB,QAAM;AAHe,CAAzB;AAMO,IAAMC,uBAAuB,GACpC;AACIC,OAAK,EAAE;AACHC,cAAU,EACV;AACIC,UAAI,EAAE,CAACC,MAAD,EAAS,IAAT,CADV;AAEIC,aAAO,EAAE,IAFb;AAGIC,eAAS,EAAE,mBAAAC,KAAK,EAChB;AACI,eAAO,CACH,EADG,SAEAT,YAFA,qBAGAU,MAAM,CAACC,IAAP,CAAYV,gBAAZ,CAHA,GAILW,OAJK,CAIGH,KAJH,MAIc,CAAC,CAJtB;AAKH;AAVL;AAFG,GADX;AAiBII,UAAQ,EAAE;AACNC,mBADM,6BAEN;AACI,UAAIb,gBAAgB,CAACc,cAAjB,CAAgC,KAAKX,UAArC,CAAJ,EACA;AACI,eAAOH,gBAAgB,CAAC,KAAKG,UAAN,CAAvB;AACH;;AAED,aAAO,KAAKA,UAAZ;AACH;AATK;AAjBd,CADO,C","file":"chunks/ceres-0.js","sourcesContent":["<template>\r\n    <div>\r\n        <div :class=\"{'no-pointer-events': isLoading}\" class=\"add-to-basket-lg-container d-none d-lg-block\" v-if=\"!showQuantity && useLargeScale && canBeAddedToBasket\"\r\n             v-tooltip data-toggle=\"tooltip\" data-placement=\"top\" :title=\"$translate('Ceres::Template.singleItemAddToBasket')\" @click=\"addToBasket()\">\r\n            <icon icon=\"cart-plus\" class=\"fa-lg mobile-icon-right\" :loading=\"isLoading\"></icon>\r\n        </div>\r\n\r\n        <div class=\"add-to-basket-lg-container d-none d-lg-block\" v-if=\"!showQuantity && useLargeScale && !canBeAddedToBasket\"\r\n             v-tooltip data-toggle=\"tooltip\" data-placement=\"top\" :title=\"$translate('Ceres::Template.itemShowItem')\" @click=\"directToItem()\">\r\n            <i class=\"fa fa-arrow-right fa-lg d-none d-sm-block\"></i>\r\n        </div>\r\n\r\n        <div class=\"d-inline\" v-if=\"showQuantity && !useLargeScale\" :class=\"{'d-lg-none': !$ceres.isItemView }\">\r\n            <div class=\"add-to-basket-container\">\r\n                <div class=\"quantity-input-container\">\r\n                    <quantity-input :value=\"quantity\"\r\n                                    @quantity-change=\"updateQuantity\"\r\n                                    @out-of-stock=\"handleButtonState\"\r\n                                    :timeout=\"0\"\r\n                                    :min=\"minimumQuantity\"\r\n                                    :max=\"maximumQuantity\"\r\n                                    :interval=\"intervalQuantity\"\r\n                                    :variation-id=\"variationId\"\r\n                                    :waiting=\"isLoading || !isSalable || !allVariationsSelected\">\r\n                    </quantity-input>\r\n                </div>\r\n\r\n                <button\r\n                        v-if=\"!allVariationsSelected || !isSalable\"\r\n                        class=\"btn btn-block btn-primary btn-appearance disabled\"\r\n                        v-tooltip\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        :title=\"tooltipText\"\r\n                        :class=\"buttonClasses\"\r\n                        :style=\"paddingInlineStyles\">\r\n                    <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i>\r\n                    {{ $translate(\"Ceres::Template.singleItemAddToBasket\") }}\r\n                </button>\r\n                <button\r\n                        v-else-if=\"!buttonLockState\"\r\n                        :disabled=\"isLoading || !hasPrice\"\r\n                        class=\"btn btn-block btn-primary btn-appearance\"\r\n                        @click=\"addToBasket()\"\r\n                        :class=\"buttonClasses\"\r\n                        :style=\"paddingInlineStyles\">\r\n                    <icon icon=\"shopping-cart\" :loading=\"isLoading\"></icon>\r\n                    {{ $translate(\"Ceres::Template.singleItemAddToBasket\") }}\r\n                </button>\r\n                <button v-else\r\n                        class=\"btn btn-block btn-primary btn-appearance disabled\"\r\n                        v-tooltip\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        :title=\"'Ceres::Template.singleItemQuantityMax' | translate({ max: maximumQuantity })\"\r\n                        :class=\"buttonClasses\"\r\n                        :style=\"paddingInlineStyles\">\r\n                    <icon icon=\"shopping-cart\" :waiting=\"isLoading\"></icon>\r\n                    {{ $translate(\"Ceres::Template.singleItemAddToBasket\") }}\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"d-inline\" v-if=\"!showQuantity && !useLargeScale\" :class=\"{'d-lg-none': !isWishList }\">\r\n            <div class=\"btn-group\" role=\"group\" aria-label=\"Thumb Control\">\r\n                <button type=\"button\" :class=\"{'no-pointer-events': isLoading}\" v-if=\"canBeAddedToBasket || isWishList\" class=\"btn btn-primary btn-appearance mobile-width-button\" @click=\"addToBasket()\">\r\n                    <icon icon=\"shopping-cart\" class=\"fa-lg mobile-icon-right\" :loading=\"isLoading\"></icon>\r\n                    {{ $translate(\"Ceres::Template.singleItemAddToBasket\") }}\r\n                </button>\r\n                <button type=\"button\" v-else class=\"btn btn-primary btn-appearance mobile-width-button\" @click=\"directToItem()\">\r\n                    <i class=\"fa fa-arrow-right fa-lg d-none d-sm-block\" aria-hidden=\"true\"></i>\r\n                    {{ $translate(\"Ceres::Template.itemShowItem\") }}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ExceptionMap from \"../../exceptions/ExceptionMap\";\r\nimport { navigateTo } from \"../../services/UrlService\";\r\nimport { isNullOrUndefined, isDefined } from \"../../helper/utils\";\r\nimport { mapState } from \"vuex\";\r\nimport { ButtonSizePropertyMixin } from \"../../mixins/buttonSizeProperty.mixin\";\r\n\r\nconst NotificationService = require(\"../../services/NotificationService\");\r\n\r\nexport default {\r\n    mixins: [ButtonSizePropertyMixin],\r\n\r\n    props:\r\n    {\r\n        itemUrl: String,\r\n        showQuantity:\r\n        {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        useLargeScale:\r\n        {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        variationId:\r\n        {\r\n            type: Number\r\n        },\r\n        isSalable:\r\n        {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        hasChildren:\r\n        {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        intervalQuantity:\r\n        {\r\n            type: Number,\r\n            default: 1\r\n        },\r\n        minimumQuantity:\r\n        {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        maximumQuantity:\r\n        {\r\n            type: Number,\r\n            default: null\r\n        },\r\n        orderProperties:\r\n        {\r\n            type: Array,\r\n            default: () => []\r\n        },\r\n        hasOrderProperties:\r\n        {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        hasPrice:\r\n        {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        paddingClasses:\r\n        {\r\n            type: String,\r\n            default: null\r\n        },\r\n        paddingInlineStyles:\r\n        {\r\n            type: String,\r\n            default: null\r\n        },\r\n        isWishList:\r\n        {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        propQuantity:\r\n        {\r\n            type: Number,\r\n            default: null\r\n        },\r\n        itemType:\r\n        {\r\n            type: String,\r\n            default: null\r\n        }\r\n    },\r\n\r\n    inject: {\r\n        itemId: {\r\n            default: null\r\n        }\r\n    },\r\n\r\n    computed:\r\n    {\r\n        isSet()\r\n        {\r\n            return (\r\n                this.$store.state.items[this.itemId]\r\n                && this.$store.state.items[this.itemId].variation\r\n                && this.$store.state.items[this.itemId].variation.documents[0].data.item.itemType === \"set\"\r\n            ) || this.itemType === \"set\";\r\n        },\r\n\r\n        canBeAddedToBasket()\r\n        {\r\n            return this.isSalable &&\r\n                !this.hasChildren &&\r\n                !(this.minimumQuantity != 1 || this.intervalQuantity != 1) &&\r\n                !this.requiresProperties &&\r\n                this.hasPrice &&\r\n                !this.isSet;\r\n        },\r\n\r\n        requiresProperties()\r\n        {\r\n            return App.config.item.requireOrderProperties &&\r\n                (this.hasOrderProperties || this.orderProperties.filter(property => property.property.isShownOnItemPage).length > 0);\r\n        },\r\n\r\n        buttonClasses()\r\n        {\r\n            const classes = [];\r\n\r\n            if (isDefined(this.buttonSizeClass))\r\n            {\r\n                classes.push(this.buttonSizeClass);\r\n            }\r\n\r\n            if (isDefined(this.paddingClasses))\r\n            {\r\n                classes.push(this.paddingClasses.split(\" \"));\r\n            }\r\n\r\n            return classes;\r\n        },\r\n\r\n        tooltipText()\r\n        {\r\n            if (this.hasAvailableVariations)\r\n            {\r\n                return this.$translate(\"Ceres::Template.singleItemPleaseSelectValidVariation\");\r\n            }\r\n            else\r\n            {\r\n                return this.$translate(\"Ceres::Template.singleItemPleaseSelectNotAvailable\");\r\n            }\r\n        },\r\n\r\n        variationOrderQuantity()\r\n        {\r\n            return this.$store.state.items[this.itemId] && this.$store.state.items[this.itemId].variationOrderQuantity;\r\n        },\r\n\r\n        variationMissingProperties()\r\n        {\r\n            return this.$store.getters[`${this.itemId}/variationMissingProperties`];\r\n        },\r\n\r\n        hasAvailableVariations()\r\n        {\r\n            return this.$store.state.items[this.itemId]\r\n                && this.$store.state.items[this.itemId].variationSelect\r\n                && this.$store.state.items[this.itemId].variationSelect.variations.some(variation => variation.isSalable);\r\n        },\r\n\r\n        allVariationsSelected()\r\n        {\r\n            if (this.isSet)\r\n            {\r\n                return this.$store.getters[\"itemSetAllVariationSelected\"];\r\n            }\r\n            else\r\n            {\r\n                // FIX return true if module is not registered. This equals the default value from the module\r\n                // and is required to use this component in other contexts, e.g. the category view\r\n                return !this.$store.state.items[this.itemId]\r\n                    || (this.$store.state.items[this.itemId].variationSelect\r\n                        && this.$store.state.items[this.itemId].variationSelect.isVariationSelected);\r\n            }\r\n        },\r\n\r\n        isLoading()\r\n        {\r\n            return this.$store.state.items.isAddToBasketLoading === this.variationId || this.$store.state.items.isSetLoading;\r\n        },\r\n\r\n        ...mapState({\r\n            basketItems: state => state.basket.items,\r\n            isBasketLoading: state => state.basket.isBasketLoading\r\n        })\r\n    },\r\n\r\n    data()\r\n    {\r\n        return {\r\n            quantity: 1,\r\n            buttonLockState: false\r\n        };\r\n    },\r\n\r\n    methods:\r\n    {\r\n        /**\r\n         * add an item to basket-resource\r\n         */\r\n        addToBasket()\r\n        {\r\n            this.$store.dispatch(\"loadComponent\", \"add-item-to-basket-overlay\");\r\n            this.$store.dispatch(\"loadComponent\", \"basket-preview\");\r\n\r\n            if (this.variationMissingProperties !== undefined && this.variationMissingProperties.length)\r\n            {\r\n                this.showMissingPropertiesError();\r\n            }\r\n            else if (this.isSalable || this.isSet)\r\n            {\r\n                this.$store.commit(\"setIsAddToBasketLoading\", this.variationId);\r\n\r\n                const orderParamsAndSurcharge = extractPropertiesAndSurcharge(this.orderProperties);\r\n\r\n                const basketObject =\r\n                    {\r\n                        variationId             :   this.variationId,\r\n                        quantity                :   this.quantity,\r\n                        basketItemOrderParams   :   orderParamsAndSurcharge.orderParams,\r\n                        totalOrderParamsMarkup  :   orderParamsAndSurcharge.totalSurcharge\r\n                    };\r\n\r\n                if(this.isSet)\r\n                {\r\n                    const setComponents = [];\r\n                    this.$store.state.items.setComponentIds.forEach(itemId =>\r\n                    {\r\n                        const setComponent = this.$store.getters[`${itemId}/currentItemVariation`];\r\n\r\n                        const variationId = setComponent && setComponent.variation.id;\r\n\r\n                        // Extract order properties and total surcharge for set components\r\n                        const setComponentOrderParamsAndSurcharge = extractPropertiesAndSurcharge(\r\n                            setComponent.properties.filter(prop => prop.property.isOderProperty)\r\n                        );\r\n\r\n                        setComponents.push({\r\n                            variationId: variationId,\r\n                            quantity: this.$store.state.items[itemId].variationOrderQuantity,\r\n                            basketItemOrderParams: setComponentOrderParamsAndSurcharge.orderParams,\r\n                            totalOrderParamsMarkup: setComponentOrderParamsAndSurcharge.totalSurcharge\r\n                        });\r\n                    });\r\n                    basketObject.setComponents = setComponents;\r\n                }\r\n\r\n                this.$store.dispatch(\"addBasketItem\", basketObject).then(\r\n                    response =>\r\n                    {\r\n                        document.dispatchEvent(new CustomEvent(\"afterBasketItemAdded\", { detail: basketObject }));\r\n                        this.$store.commit(\"setIsAddToBasketLoading\", 0);\r\n                    },\r\n                    error =>\r\n                    {\r\n                        this.$store.commit(\"setIsAddToBasketLoading\", 0);\r\n\r\n                        if (error.data)\r\n                        {\r\n                            NotificationService.error(\r\n                                this.$translate(\r\n                                    \"Ceres::Template.\" + ExceptionMap.get(error.data.exceptionCode.toString()),\r\n                                    error.data.placeholder\r\n                                )\r\n                            ).closeAfter(5000);\r\n                        }\r\n                    });\r\n            }\r\n        },\r\n        showMissingPropertiesError()\r\n        {\r\n            this.$store.commit(`${this.itemId}/setVariationMarkInvalidProps`, true);\r\n\r\n            const propertyNames = this.variationMissingProperties.map(property => property.property.names.name);\r\n            let errorMsgContent = \"\";\r\n\r\n            for (const name of propertyNames)\r\n            {\r\n                errorMsgContent += name + \"<br>\";\r\n            }\r\n\r\n            NotificationService.error(this.$translate(\"Ceres::Template.singleItemMissingOrderPropertiesError\").replace(\"<properties>\", errorMsgContent));\r\n        },\r\n\r\n        directToItem()\r\n        {\r\n            navigateTo(this.itemUrl);\r\n        },\r\n\r\n        handleButtonState(value)\r\n        {\r\n            this.buttonLockState = value;\r\n        },\r\n\r\n        /**\r\n         * update the property quantity of the current instance\r\n         * @param value\r\n         */\r\n        updateQuantity(value)\r\n        {\r\n            this.quantity = value;\r\n        }\r\n    },\r\n\r\n    watch:\r\n    {\r\n        quantity(value)\r\n        {\r\n            if(!isNullOrUndefined(this.itemId))\r\n            {\r\n                this.$store.commit(`${this.itemId}/setVariationOrderQuantity`, value);\r\n                this.$store.commit(`${this.itemId}/setVariationPropertySurcharges`, this.$store.getters[`${this.itemId}/variationBasePrice`]);\r\n            }\r\n        },\r\n\r\n        variationOrderQuantity(value)\r\n        {\r\n            if (this.quantity !== value)\r\n            {\r\n                this.quantity = value;\r\n            }\r\n        },\r\n\r\n        propQuantity(value)\r\n        {\r\n            if (!isNaN(value))\r\n            {\r\n                this.quantity = value;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction extractPropertiesAndSurcharge(orderProperties)\r\n{\r\n    let totalSurcharge = 0;\r\n    const orderParams = [];\r\n\r\n    orderProperties.forEach((orderProperty) =>\r\n    {\r\n        if(!isNullOrUndefined(orderProperty.property.value))\r\n        {\r\n            const property = orderProperty.property;\r\n\r\n            if (property.valueType === \"float\" &&\r\n                !isNullOrUndefined(property.value) &&\r\n                property.value.slice(-1) === App.decimalSeparator)\r\n            {\r\n                property.value = property.value.substr(0, property.value.length - 1);\r\n            }\r\n\r\n            totalSurcharge += (orderProperty.surcharge || 0) + (property.surcharge || 0);\r\n\r\n            orderParams.push({\r\n                propertyId: property.id,\r\n                type: property.valueType,\r\n                name: property.names.name,\r\n                value: property.value\r\n            });\r\n        }\r\n    });\r\n\r\n    return {\r\n        orderParams: orderParams,\r\n        totalSurcharge: totalSurcharge\r\n    };\r\n}\r\n</script>\r\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    !_vm.showQuantity && _vm.useLargeScale && _vm.canBeAddedToBasket\n      ? _c(\n          \"div\",\n          {\n            directives: [{ name: \"tooltip\", rawName: \"v-tooltip\" }],\n            staticClass: \"add-to-basket-lg-container d-none d-lg-block\",\n            class: { \"no-pointer-events\": _vm.isLoading },\n            attrs: {\n              \"data-toggle\": \"tooltip\",\n              \"data-placement\": \"top\",\n              title: _vm.$translate(\"Ceres::Template.singleItemAddToBasket\")\n            },\n            on: {\n              click: function($event) {\n                return _vm.addToBasket()\n              }\n            }\n          },\n          [\n            _c(\"icon\", {\n              staticClass: \"fa-lg mobile-icon-right\",\n              attrs: { icon: \"cart-plus\", loading: _vm.isLoading }\n            })\n          ],\n          1\n        )\n      : _vm._e(),\n    _vm._v(\" \"),\n    !_vm.showQuantity && _vm.useLargeScale && !_vm.canBeAddedToBasket\n      ? _c(\n          \"div\",\n          {\n            directives: [{ name: \"tooltip\", rawName: \"v-tooltip\" }],\n            staticClass: \"add-to-basket-lg-container d-none d-lg-block\",\n            attrs: {\n              \"data-toggle\": \"tooltip\",\n              \"data-placement\": \"top\",\n              title: _vm.$translate(\"Ceres::Template.itemShowItem\")\n            },\n            on: {\n              click: function($event) {\n                return _vm.directToItem()\n              }\n            }\n          },\n          [\n            _c(\"i\", {\n              staticClass: \"fa fa-arrow-right fa-lg d-none d-sm-block\"\n            })\n          ]\n        )\n      : _vm._e(),\n    _vm._v(\" \"),\n    _vm.showQuantity && !_vm.useLargeScale\n      ? _c(\n          \"div\",\n          {\n            staticClass: \"d-inline\",\n            class: { \"d-lg-none\": !_vm.$ceres.isItemView }\n          },\n          [\n            _c(\"div\", { staticClass: \"add-to-basket-container\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"quantity-input-container\" },\n                [\n                  _c(\"quantity-input\", {\n                    attrs: {\n                      value: _vm.quantity,\n                      timeout: 0,\n                      min: _vm.minimumQuantity,\n                      max: _vm.maximumQuantity,\n                      interval: _vm.intervalQuantity,\n                      \"variation-id\": _vm.variationId,\n                      waiting:\n                        _vm.isLoading ||\n                        !_vm.isSalable ||\n                        !_vm.allVariationsSelected\n                    },\n                    on: {\n                      \"quantity-change\": _vm.updateQuantity,\n                      \"out-of-stock\": _vm.handleButtonState\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              !_vm.allVariationsSelected || !_vm.isSalable\n                ? _c(\n                    \"button\",\n                    {\n                      directives: [{ name: \"tooltip\", rawName: \"v-tooltip\" }],\n                      staticClass:\n                        \"btn btn-block btn-primary btn-appearance disabled\",\n                      class: _vm.buttonClasses,\n                      style: _vm.paddingInlineStyles,\n                      attrs: {\n                        \"data-toggle\": \"tooltip\",\n                        \"data-placement\": \"top\",\n                        title: _vm.tooltipText\n                      }\n                    },\n                    [\n                      _c(\"i\", {\n                        staticClass: \"fa fa-shopping-cart\",\n                        attrs: { \"aria-hidden\": \"true\" }\n                      }),\n                      _vm._v(\n                        \"\\n                \" +\n                          _vm._s(\n                            _vm.$translate(\n                              \"Ceres::Template.singleItemAddToBasket\"\n                            )\n                          ) +\n                          \"\\n            \"\n                      )\n                    ]\n                  )\n                : !_vm.buttonLockState\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn btn-block btn-primary btn-appearance\",\n                      class: _vm.buttonClasses,\n                      style: _vm.paddingInlineStyles,\n                      attrs: { disabled: _vm.isLoading || !_vm.hasPrice },\n                      on: {\n                        click: function($event) {\n                          return _vm.addToBasket()\n                        }\n                      }\n                    },\n                    [\n                      _c(\"icon\", {\n                        attrs: { icon: \"shopping-cart\", loading: _vm.isLoading }\n                      }),\n                      _vm._v(\n                        \"\\n                \" +\n                          _vm._s(\n                            _vm.$translate(\n                              \"Ceres::Template.singleItemAddToBasket\"\n                            )\n                          ) +\n                          \"\\n            \"\n                      )\n                    ],\n                    1\n                  )\n                : _c(\n                    \"button\",\n                    {\n                      directives: [{ name: \"tooltip\", rawName: \"v-tooltip\" }],\n                      staticClass:\n                        \"btn btn-block btn-primary btn-appearance disabled\",\n                      class: _vm.buttonClasses,\n                      style: _vm.paddingInlineStyles,\n                      attrs: {\n                        \"data-toggle\": \"tooltip\",\n                        \"data-placement\": \"top\",\n                        title: _vm._f(\n                          \"translate\"\n                        )(\"Ceres::Template.singleItemQuantityMax\", {\n                          max: _vm.maximumQuantity\n                        })\n                      }\n                    },\n                    [\n                      _c(\"icon\", {\n                        attrs: { icon: \"shopping-cart\", waiting: _vm.isLoading }\n                      }),\n                      _vm._v(\n                        \"\\n                \" +\n                          _vm._s(\n                            _vm.$translate(\n                              \"Ceres::Template.singleItemAddToBasket\"\n                            )\n                          ) +\n                          \"\\n            \"\n                      )\n                    ],\n                    1\n                  )\n            ])\n          ]\n        )\n      : _vm._e(),\n    _vm._v(\" \"),\n    !_vm.showQuantity && !_vm.useLargeScale\n      ? _c(\n          \"div\",\n          { staticClass: \"d-inline\", class: { \"d-lg-none\": !_vm.isWishList } },\n          [\n            _c(\n              \"div\",\n              {\n                staticClass: \"btn-group\",\n                attrs: { role: \"group\", \"aria-label\": \"Thumb Control\" }\n              },\n              [\n                _vm.canBeAddedToBasket || _vm.isWishList\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass:\n                          \"btn btn-primary btn-appearance mobile-width-button\",\n                        class: { \"no-pointer-events\": _vm.isLoading },\n                        attrs: { type: \"button\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.addToBasket()\n                          }\n                        }\n                      },\n                      [\n                        _c(\"icon\", {\n                          staticClass: \"fa-lg mobile-icon-right\",\n                          attrs: {\n                            icon: \"shopping-cart\",\n                            loading: _vm.isLoading\n                          }\n                        }),\n                        _vm._v(\n                          \"\\n                \" +\n                            _vm._s(\n                              _vm.$translate(\n                                \"Ceres::Template.singleItemAddToBasket\"\n                              )\n                            ) +\n                            \"\\n            \"\n                        )\n                      ],\n                      1\n                    )\n                  : _c(\n                      \"button\",\n                      {\n                        staticClass:\n                          \"btn btn-primary btn-appearance mobile-width-button\",\n                        attrs: { type: \"button\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.directToItem()\n                          }\n                        }\n                      },\n                      [\n                        _c(\"i\", {\n                          staticClass:\n                            \"fa fa-arrow-right fa-lg d-none d-sm-block\",\n                          attrs: { \"aria-hidden\": \"true\" }\n                        }),\n                        _vm._v(\n                          \"\\n                \" +\n                            _vm._s(\n                              _vm.$translate(\"Ceres::Template.itemShowItem\")\n                            ) +\n                            \"\\n            \"\n                        )\n                      ]\n                    )\n              ]\n            )\n          ]\n        )\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./AddToBasket.vue?vue&type=template&id=729fe3ab&\"\nimport script from \"./AddToBasket.vue?vue&type=script&lang=js&\"\nexport * from \"./AddToBasket.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Duc\\\\Documents\\\\Webshop\\\\plugin-ceres\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('729fe3ab')) {\n      api.createRecord('729fe3ab', component.options)\n    } else {\n      api.reload('729fe3ab', component.options)\n    }\n    module.hot.accept(\"./AddToBasket.vue?vue&type=template&id=729fe3ab&\", function () {\n      api.rerender('729fe3ab', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/app/components/basket/AddToBasket.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddToBasket.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddToBasket.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddToBasket.vue?vue&type=template&id=729fe3ab&\"","const BUTTON_SIZES = [\"btn-sm\", \"btn-lg\"];\n\nconst LEGACY_CLASS_MAP = {\n    \"sm\": \"btn-sm\",\n    \"md\": \"\",\n    \"lg\": \"btn-lg\"\n};\n\nexport const ButtonSizePropertyMixin =\n{\n    props: {\n        buttonSize:\n        {\n            type: [String, null],\n            default: null,\n            validator: value =>\n            {\n                return [\n                    \"\",\n                    ...BUTTON_SIZES,\n                    ...Object.keys(LEGACY_CLASS_MAP)\n                ].indexOf(value) !== -1;\n            }\n        }\n    },\n\n    computed: {\n        buttonSizeClass()\n        {\n            if (LEGACY_CLASS_MAP.hasOwnProperty(this.buttonSize))\n            {\n                return LEGACY_CLASS_MAP[this.buttonSize];\n            }\n\n            return this.buttonSize;\n        }\n    }\n};\n"],"sourceRoot":""}