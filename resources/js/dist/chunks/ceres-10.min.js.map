{"version":3,"sources":["webpack:///./resources/js/src/app/mixins/buttonSizeProperty.mixin.js","webpack:///./resources/js/src/app/components/customer/login/Login.vue?757e","webpack:///./resources/js/src/app/components/customer/login/Login.vue?01f7","webpack:///resources/js/src/app/components/customer/login/Login.vue","webpack:///./resources/js/src/app/components/customer/login/Login.vue"],"names":["BUTTON_SIZES","LEGACY_CLASS_MAP","ButtonSizePropertyMixin","props","buttonSize","type","String","default","validator","value","Object","keys","indexOf","computed","buttonSizeClass","hasOwnProperty","this","render","_vm","_h","$createElement","_c","_self","staticClass","ref","attrs","id","_uid","method","class","modalElement","directives","name","rawName","username","expression","autocomplete","domProps","on","input","$event","target","composing","_v","for","_s","$translate","password","row","href","click","showResetPwdView","_t","disabled","isDisabled","preventDefault","validateLogin","icon","loading","_withStripped","component","options","__file"],"mappings":"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","file":"chunks/ceres-10.min.js","sourcesContent":["const BUTTON_SIZES = [\"btn-sm\", \"btn-lg\"];\r\n\r\nconst LEGACY_CLASS_MAP = {\r\n    \"sm\": \"btn-sm\",\r\n    \"md\": \"\",\r\n    \"lg\": \"btn-lg\"\r\n};\r\n\r\nexport const ButtonSizePropertyMixin =\r\n{\r\n    props: {\r\n        buttonSize:\r\n        {\r\n            type: [String, null],\r\n            default: null,\r\n            validator: value =>\r\n            {\r\n                return [\r\n                    \"\",\r\n                    ...BUTTON_SIZES,\r\n                    ...Object.keys(LEGACY_CLASS_MAP)\r\n                ].indexOf(value) !== -1;\r\n            }\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        buttonSizeClass()\r\n        {\r\n            if (LEGACY_CLASS_MAP.hasOwnProperty(this.buttonSize))\r\n            {\r\n                return LEGACY_CLASS_MAP[this.buttonSize];\r\n            }\r\n\r\n            return this.buttonSize;\r\n        }\r\n    }\r\n};\r\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"login-pwd-reset\" }, [\n    _c(\n      \"form\",\n      {\n        ref: \"loginForm\",\n        attrs: { id: \"login-form-\" + _vm._uid, method: \"post\" }\n      },\n      [\n        _c(\"div\", { class: { \"modal-body\": _vm.modalElement } }, [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-12\" }, [\n              _c(\n                \"div\",\n                {\n                  staticClass: \"input-unit\",\n                  attrs: { \"data-validate\": \"mail\" }\n                },\n                [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.username,\n                        expression: \"username\"\n                      }\n                    ],\n                    attrs: {\n                      \"data-testing\": \"email-login\",\n                      type: \"email\",\n                      name: \"email\",\n                      autocomplete: \"email\",\n                      id: \"email\" + _vm._uid,\n                      \"data-autofocus\": \"\"\n                    },\n                    domProps: { value: _vm.username },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.username = $event.target.value\n                      }\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"label\", { attrs: { for: \"email\" + _vm._uid } }, [\n                    _vm._v(\n                      _vm._s(_vm.$translate(\"Ceres::Template.loginEmail\")) + \"*\"\n                    )\n                  ])\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"error-msg\" }, [\n                _vm._v(\n                  _vm._s(\n                    _vm.$translate(\"Ceres::Template.loginEnterConfirmEmail\")\n                  )\n                )\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12\" }, [\n              _c(\n                \"div\",\n                {\n                  staticClass: \"input-unit\",\n                  class: { \"no-bottom\": _vm.modalElement },\n                  attrs: { \"data-validate\": \"text\" }\n                },\n                [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.password,\n                        expression: \"password\"\n                      }\n                    ],\n                    attrs: {\n                      \"data-testing\": \"password-login\",\n                      type: \"password\",\n                      name: \"password\",\n                      autocomplete: \"current-password\",\n                      id: \"password\" + _vm._uid\n                    },\n                    domProps: { value: _vm.password },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.password = $event.target.value\n                      }\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"label\", { attrs: { for: \"password\" + _vm._uid } }, [\n                    _vm._v(\n                      _vm._s(_vm.$translate(\"Ceres::Template.loginPassword\")) +\n                        \"*\"\n                    )\n                  ])\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"error-msg\" }, [\n                _vm._v(\n                  _vm._s(_vm.$translate(\"Ceres::Template.loginEmptyPassword\"))\n                )\n              ])\n            ])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          {\n            class: {\n              \"modal-footer justify-content-between\": _vm.modalElement,\n              row: !_vm.modalElement\n            }\n          },\n          [\n            _c(\"div\", { class: { \"col-7 col-sm-4\": !_vm.modalElement } }, [\n              _c(\n                \"a\",\n                {\n                  staticClass: \"small text-appearance\",\n                  attrs: { href: \"javascript:void(0)\" },\n                  on: { click: _vm.showResetPwdView }\n                },\n                [\n                  _vm._v(\n                    _vm._s(\n                      _vm.$translate(\"Ceres::Template.loginForgotPassword\")\n                    ) + \"?\"\n                  )\n                ]\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { class: { \"col-5 col-sm-8 text-sm-right\": !_vm.modalElement } },\n              [\n                _vm._t(\"extend-overlay-buttons\"),\n                _vm._v(\" \"),\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-primary btn-appearance btn-medium\",\n                    class: [\n                      { \"float-right\": !_vm.modalElement },\n                      _vm.buttonSizeClass\n                    ],\n                    attrs: {\n                      \"data-testing\": \"submit-login\",\n                      disabled: _vm.isDisabled\n                    },\n                    on: {\n                      click: function($event) {\n                        $event.preventDefault()\n                        return _vm.validateLogin($event)\n                      }\n                    }\n                  },\n                  [\n                    _vm._v(\n                      \"\\n                    \" +\n                        _vm._s(_vm.$translate(\"Ceres::Template.login\")) +\n                        \"\\n                    \"\n                    ),\n                    _c(\"icon\", {\n                      attrs: { icon: \"user\", loading: _vm.isDisabled }\n                    })\n                  ],\n                  1\n                )\n              ],\n              2\n            )\n          ]\n        )\n      ]\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=js&\"","<template>\r\n    <div class=\"login-pwd-reset\">\r\n        <form ref=\"loginForm\" :id=\"'login-form-' + _uid\" method=\"post\">\r\n            <div :class=\"{'modal-body': modalElement}\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <div class=\"input-unit\" data-validate=\"mail\">\r\n                            <input data-testing=\"email-login\" type=\"email\" name=\"email\" autocomplete=\"email\" :id=\"'email' + _uid\" v-model=\"username\" data-autofocus>\r\n                            <label :for=\"'email' + _uid\">{{ $translate(\"Ceres::Template.loginEmail\") }}*</label>\r\n                        </div>\r\n                        <span class=\"error-msg\">{{ $translate(\"Ceres::Template.loginEnterConfirmEmail\") }}</span>\r\n                    </div>\r\n                    <div class=\"col-12\">\r\n                        <div class=\"input-unit\" :class=\"{'no-bottom': modalElement}\" data-validate=\"text\">\r\n                            <input data-testing=\"password-login\" type=\"password\" name=\"password\" autocomplete=\"current-password\" :id=\"'password' + _uid\" v-model=\"password\">\r\n                            <label :for=\"'password' + _uid\">{{ $translate(\"Ceres::Template.loginPassword\") }}*</label>\r\n                        </div>\r\n                        <span class=\"error-msg\">{{ $translate(\"Ceres::Template.loginEmptyPassword\") }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div :class=\"{'modal-footer justify-content-between': modalElement, 'row': !modalElement}\">\r\n                <div :class=\"{'col-7 col-sm-4': !modalElement}\">\r\n                    <a href=\"javascript:void(0)\" @click=\"showResetPwdView\" class=\"small text-appearance\">{{ $translate(\"Ceres::Template.loginForgotPassword\") }}?</a>\r\n                </div>\r\n                <div :class=\"{'col-5 col-sm-8 text-sm-right': !modalElement}\">\r\n                    <slot name=\"extend-overlay-buttons\"></slot>\r\n                    <button data-testing=\"submit-login\" @click.prevent=\"validateLogin\" :disabled=\"isDisabled\" class=\"btn btn-primary btn-appearance btn-medium\" :class=\"[{'float-right': !modalElement}, buttonSizeClass]\">\r\n                        {{ $translate(\"Ceres::Template.login\") }}\r\n                        <icon icon=\"user\" :loading=\"isDisabled\"></icon>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ButtonSizePropertyMixin } from \"../../../mixins/buttonSizeProperty.mixin\";\r\n\r\nimport ApiService from \"../../../services/ApiService\";\r\nimport NotificationService from \"../../../services/NotificationService\";\r\nimport ModalService from \"../../../services/ModalService\";\r\nimport AutoFocusService from \"../../../services/AutoFocusService\";\r\nimport ValidationService from \"../../../services/ValidationService\";\r\nimport {getContainingComponent, isNullOrUndefined} from \"../../../helper/utils\";\r\n\r\nexport default {\r\n    mixins: [ButtonSizePropertyMixin],\r\n\r\n    props: {\r\n        backlink: {\r\n            type: String\r\n        },\r\n        modalElement: {\r\n            type: String\r\n        },\r\n        hasToForward:\r\n        {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    data()\r\n    {\r\n        return {\r\n            password: \"\",\r\n            username: \"\",\r\n            loginFields: [],\r\n            isDisabled: false\r\n        };\r\n    },\r\n\r\n    mounted()\r\n    {\r\n        this.$nextTick(() =>\r\n        {\r\n            this.loginFields = this.$refs.loginForm.querySelectorAll(\".input-unit\");\r\n\r\n            AutoFocusService.triggerAutoFocus();\r\n        });\r\n    },\r\n\r\n    watch:\r\n    {\r\n        password(val, oldVal)\r\n        {\r\n            this.resetError();\r\n        },\r\n\r\n        username(val, oldVal)\r\n        {\r\n            this.resetError();\r\n        }\r\n    },\r\n\r\n    methods:\r\n    {\r\n        /**\r\n         * Open the login modal\r\n         */\r\n        showLogin()\r\n        {\r\n            ModalService.findModal(document.getElementById(this.modalElement)).show();\r\n        },\r\n\r\n        validateLogin()\r\n        {\r\n            ValidationService.validate($(\"#login-form-\" + this._uid))\r\n                .done(() =>\r\n                {\r\n                    this.sendLogin();\r\n                })\r\n                .fail(invalidFields =>\r\n                {\r\n                    ValidationService.markInvalidFields(invalidFields, \"error\");\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Send the login data\r\n         */\r\n        sendLogin()\r\n        {\r\n            this.isDisabled = true;\r\n\r\n            ApiService.post(\"/rest/io/customer/login\", { email: this.username, password: this.password }, { supressNotifications: true })\r\n                .done(response =>\r\n                {\r\n                    ApiService.setToken(response);\r\n\r\n                    NotificationService.success(\r\n                        this.$translate(\"Ceres::Template.loginSuccessful\")\r\n                    ).closeAfter(3000);\r\n\r\n                    if (this.backlink !== null && this.backlink)\r\n                    {\r\n                        location.assign(decodeURIComponent(this.backlink));\r\n                    }\r\n                    else if (this.hasToForward)\r\n                    {\r\n                        location.assign(location.origin);\r\n                    }\r\n                    else\r\n                    {\r\n                        location.reload();\r\n                    }\r\n                })\r\n                .fail(response =>\r\n                {\r\n                    this.isDisabled = false;\r\n\r\n                    switch (response.error.code)\r\n                    {\r\n                        case 401:\r\n                            this.loginFields.forEach(element => element.classList.add(\"has-login-error\"));\r\n\r\n                            let translationKey = \"Ceres::Template.loginFailed\";\r\n\r\n                            if (response.error.message.length > 0 && response.error.message === \"user is blocked\")\r\n                            {\r\n                                translationKey = \"Ceres::Template.loginBlocked\";\r\n                            }\r\n                            NotificationService.error(\r\n                                this.$translate(translationKey)\r\n                            ).closeAfter(10000);\r\n                            break;\r\n                        default:\r\n                            return;\r\n                    }\r\n                });\r\n        },\r\n\r\n        showResetPwdView()\r\n        {\r\n            this.resetError();\r\n\r\n            this.$store.dispatch(\"loadComponent\", \"forgot-password-modal\");\r\n\r\n            Vue.nextTick(() =>\r\n            {\r\n                let modalDOM = document.querySelector('#resetPwd');\r\n                let modalVue = getContainingComponent(modalDOM);\r\n\r\n                modalVue.$data.username = this.username;\r\n\r\n                let showModal = () => ModalService.findModal(modalDOM).show();\r\n\r\n                if(this.modalElement)\r\n                {\r\n                    ModalService\r\n                        .findModal(document.getElementById(this.modalElement))\r\n                        .hide()\r\n                        .then(showModal);\r\n                }\r\n                else\r\n                {\r\n                    showModal();\r\n                }\r\n            });\r\n        },\r\n\r\n        resetError()\r\n        {\r\n            this.loginFields.forEach( element => element.classList.remove(\"has-login-error\"));\r\n            ValidationService.unmarkAllFields(\"#login-form-\" + this._uid);\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import { render, staticRenderFns } from \"./Login.vue?vue&type=template&id=0f0e37b8&\"\nimport script from \"./Login.vue?vue&type=script&lang=js&\"\nexport * from \"./Login.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Duc\\\\Documents\\\\Webshop\\\\plugin-ceres\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('0f0e37b8')) {\n      api.createRecord('0f0e37b8', component.options)\n    } else {\n      api.reload('0f0e37b8', component.options)\n    }\n    module.hot.accept(\"./Login.vue?vue&type=template&id=0f0e37b8&\", function () {\n      api.rerender('0f0e37b8', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/app/components/customer/login/Login.vue\"\nexport default component.exports"],"sourceRoot":""}