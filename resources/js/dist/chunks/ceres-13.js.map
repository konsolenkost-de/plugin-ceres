{"version":3,"sources":["webpack:///resources/js/src/app/components/customer/login/Login.vue","webpack:///./resources/js/src/app/components/customer/login/Login.vue?757e","webpack:///./resources/js/src/app/components/customer/login/Login.vue","webpack:///./resources/js/src/app/components/customer/login/Login.vue?01f7","webpack:///./resources/js/src/app/components/customer/login/Login.vue?6232","webpack:///./resources/js/src/app/mixins/buttonSizeProperty.mixin.js"],"names":["BUTTON_SIZES","LEGACY_CLASS_MAP","ButtonSizePropertyMixin","props","buttonSize","type","String","default","validator","value","Object","keys","indexOf","computed","buttonSizeClass","hasOwnProperty"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,oGADA;AAGA;AACA;AACA;AADA,KADA;AAIA;AACA;AADA,KAJA;AAOA,kBACA;AACA,mBADA;AAEA;AAFA;AARA,GAHA;AAiBA,MAjBA,kBAkBA;AACA;AACA,kBADA;AAEA,kBAFA;AAGA,qBAHA;AAIA;AAJA;AAMA,GAzBA;AA2BA,SA3BA,qBA4BA;AAAA;;AACA,+BACA;AACA;AAEA;AACA,KALA;AAMA,GAnCA;AAqCA,SACA;AACA,YADA,oBACA,GADA,EACA,MADA,EAEA;AACA;AACA,KAJA;AAMA,YANA,oBAMA,GANA,EAMA,MANA,EAOA;AACA;AACA;AATA,GAtCA;AAkDA,WACA;AACA;AACA;AACA;AACA,aAJA,uBAKA;AACA;AACA,KAPA;AASA,iBATA,2BAUA;AAAA;;AACA,kHACA,IADA,CACA,YACA;AACA;AACA,OAJA,EAKA,IALA,CAKA,yBACA;AACA;AACA,OARA;AASA,KApBA;;AAsBA;AACA;AACA;AACA,aAzBA,uBA0BA;AAAA;;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,IADA,CACA,oBACA;AACA;AAEA,sFACA,oDADA,EAEA,UAFA,CAEA,IAFA;;AAIA,yDACA;AACA;AACA,SAHA,MAIA,yBACA;AACA;AACA,SAHA,MAKA;AACA;AACA;AACA,OArBA,EAsBA,IAtBA,CAsBA,oBACA;AACA;;AAEA;AAEA;AACA;AAAA;AAAA;;AAEA;;AAEA,mGACA;AACA;AACA;;AACA,wFACA,iCADA,EAEA,UAFA,CAEA,KAFA;AAGA;;AACA;AACA;AAhBA;AAkBA,OA5CA;AA6CA,KA1EA;AA4EA,oBA5EA,8BA6EA;AAAA;;AACA;AAEA;AAEA,+BACA;AACA;AACA;AAEA;;AAEA;AAAA;AAAA;;AAEA,iCACA;AACA,yEACA,SADA,CACA,4CADA,EAEA,IAFA,GAGA,IAHA,CAGA,SAHA;AAIA,SANA,MAQA;AACA;AACA;AACA,OApBA;AAqBA,KAvGA;AAyGA,cAzGA,wBA0GA;AACA;AAAA;AAAA;AACA;AACA;AA7GA;AAnDA,G;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,oBAAoB,iCAAiC;AACrD,gBAAgB,SAAS,+CAA+C,EAAE;AAC1E,iBAAiB,SAAS,iCAAiC,EAAE;AAC7D,mBAAmB,qBAAqB;AACxC,qBAAqB,wBAAwB;AAC7C;AACA;AACA,eAAe,oCAAoC,0BAA0B,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,6BAA6B,sBAAsB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,6BAA6B,SAAS,0BAA0B,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA,wBAAwB,gCAAgC;AACxD,wBAAwB;AACxB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,6BAA6B,sBAAsB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,6BAA6B,SAAS,6BAA6B,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,qBAAqB,SAAS,sCAAsC,EAAE;AACtE;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD,qBAAqB;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS,oDAAoD,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mCAAmC;AACxD;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACvLA;AAAA;AAAA;AAAA;AAAoF;AAC3B;AACL;;;AAGpD;AACyG;AACzG,gBAAgB,2GAAU;AAC1B,EAAE,2EAAM;AACR,EAAE,gFAAM;AACR,EAAE,yFAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACtCf;AAAA;AAAA,wCAAmM,CAAgB,yOAAG,EAAC,C;;;;;;;;;;;;ACAvN;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,IAAMA,YAAY,GAAG,CAAC,QAAD,EAAW,QAAX,CAArB;AAEA,IAAMC,gBAAgB,GAAG;AACrB,QAAM,QADe;AAErB,QAAM,EAFe;AAGrB,QAAM;AAHe,CAAzB;AAMO,IAAMC,uBAAuB,GACpC;AACIC,OAAK,EAAE;AACHC,cAAU,EACV;AACIC,UAAI,EAAE,CAACC,MAAD,EAAS,IAAT,CADV;AAEIC,aAAO,EAAE,IAFb;AAGIC,eAAS,EAAE,mBAAAC,KAAK,EAChB;AACI,eAAO,CACH,EADG,SAEAT,YAFA,qBAGAU,MAAM,CAACC,IAAP,CAAYV,gBAAZ,CAHA,GAILW,OAJK,CAIGH,KAJH,MAIc,CAAC,CAJtB;AAKH;AAVL;AAFG,GADX;AAiBII,UAAQ,EAAE;AACNC,mBADM,6BAEN;AACI,UAAIb,gBAAgB,CAACc,cAAjB,CAAgC,KAAKX,UAArC,CAAJ,EACA;AACI,eAAOH,gBAAgB,CAAC,KAAKG,UAAN,CAAvB;AACH;;AAED,aAAO,KAAKA,UAAZ;AACH;AATK;AAjBd,CADO,C","file":"chunks/ceres-13.js","sourcesContent":["<template>\r\n    <div class=\"login-pwd-reset\">\r\n        <form :id=\"'login-form-' + _uid\" method=\"post\">\r\n            <div :class=\"{'modal-body': modalElement}\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <div class=\"input-unit\" data-validate=\"mail\">\r\n                            <input data-testing=\"email-login\" type=\"email\" name=\"email\" autocomplete=\"email\" :id=\"'email' + _uid\" v-model=\"username\" data-autofocus>\r\n                            <label :for=\"'email' + _uid\">{{ $translate(\"Ceres::Template.loginEmail\") }}*</label>\r\n                        </div>\r\n                        <span class=\"error-msg\">{{ $translate(\"Ceres::Template.loginEnterConfirmEmail\") }}</span>\r\n                    </div>\r\n                    <div class=\"col-12\">\r\n                        <div class=\"input-unit\" :class=\"{'no-bottom': modalElement}\" data-validate=\"text\">\r\n                            <input data-testing=\"password-login\" type=\"password\" name=\"password\" autocomplete=\"current-password\" :id=\"'password' + _uid\" v-model=\"password\">\r\n                            <label :for=\"'password' + _uid\">{{ $translate(\"Ceres::Template.loginPassword\") }}*</label>\r\n                        </div>\r\n                        <span class=\"error-msg\">{{ $translate(\"Ceres::Template.loginEmptyPassword\") }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div :class=\"{'modal-footer justify-content-between': modalElement, 'row': !modalElement}\">\r\n                <div :class=\"{'col-7 col-sm-4': !modalElement}\">\r\n                    <a href=\"javascript:void(0)\" @click=\"showResetPwdView\" class=\"small text-appearance\">{{ $translate(\"Ceres::Template.loginForgotPassword\") }}?</a>\r\n                </div>\r\n                <div :class=\"{'col-5 col-sm-8 text-sm-right': !modalElement}\">\r\n                    <slot name=\"extend-overlay-buttons\"></slot>\r\n                    <button data-testing=\"submit-login\" @click.prevent=\"validateLogin\" :disabled=\"isDisabled\" class=\"btn btn-primary btn-appearance btn-medium\" :class=\"[{'float-right': !modalElement}, buttonSizeClass]\">\r\n                        {{ $translate(\"Ceres::Template.login\") }}\r\n                        <icon icon=\"user\" :loading=\"isDisabled\"></icon>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ButtonSizePropertyMixin } from \"../../../mixins/buttonSizeProperty.mixin\";\r\n\r\nimport ApiService from \"../../../services/ApiService\";\r\nimport NotificationService from \"../../../services/NotificationService\";\r\nimport ModalService from \"../../../services/ModalService\";\r\nimport AutoFocusService from \"../../../services/AutoFocusService\";\r\nimport ValidationService from \"../../../services/ValidationService\";\r\nimport { getContainingComponent } from \"../../../helper/utils\";\r\n\r\nexport default {\r\n    mixins: [ButtonSizePropertyMixin],\r\n\r\n    props: {\r\n        backlink: {\r\n            type: String\r\n        },\r\n        modalElement: {\r\n            type: String\r\n        },\r\n        hasToForward:\r\n        {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    data()\r\n    {\r\n        return {\r\n            password: \"\",\r\n            username: \"\",\r\n            loginFields: [],\r\n            isDisabled: false\r\n        };\r\n    },\r\n\r\n    mounted()\r\n    {\r\n        this.$nextTick(() =>\r\n        {\r\n            this.loginFields = document.querySelector(\"#login-form-\" + this._uid).querySelectorAll(\".input-unit\");\r\n\r\n            AutoFocusService.triggerAutoFocus();\r\n        });\r\n    },\r\n\r\n    watch:\r\n    {\r\n        password(val, oldVal)\r\n        {\r\n            this.resetError();\r\n        },\r\n\r\n        username(val, oldVal)\r\n        {\r\n            this.resetError();\r\n        }\r\n    },\r\n\r\n    methods:\r\n    {\r\n        /**\r\n         * Open the login modal\r\n         */\r\n        showLogin()\r\n        {\r\n            ModalService.findModal(document.getElementById(this.modalElement)).show();\r\n        },\r\n\r\n        validateLogin()\r\n        {\r\n            ValidationService.validate($(\"#login-form-\" + this._uid))\r\n                .done(() =>\r\n                {\r\n                    this.sendLogin();\r\n                })\r\n                .fail(invalidFields =>\r\n                {\r\n                    ValidationService.markInvalidFields(invalidFields, \"error\");\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Send the login data\r\n         */\r\n        sendLogin()\r\n        {\r\n            this.isDisabled = true;\r\n\r\n            ApiService.post(\"/rest/io/customer/login\", { email: this.username, password: this.password }, { supressNotifications: true })\r\n                .done(response =>\r\n                {\r\n                    ApiService.setToken(response);\r\n\r\n                    NotificationService.success(\r\n                        this.$translate(\"Ceres::Template.loginSuccessful\")\r\n                    ).closeAfter(3000);\r\n\r\n                    if (this.backlink !== null && this.backlink)\r\n                    {\r\n                        location.assign(decodeURIComponent(this.backlink));\r\n                    }\r\n                    else if (this.hasToForward)\r\n                    {\r\n                        location.assign(location.origin);\r\n                    }\r\n                    else\r\n                    {\r\n                        location.reload();\r\n                    }\r\n                })\r\n                .fail(response =>\r\n                {\r\n                    this.isDisabled = false;\r\n\r\n                    switch (response.error.code)\r\n                    {\r\n                        case 401:\r\n                            this.loginFields.forEach(element => element.classList.add(\"has-login-error\"));\r\n\r\n                            let translationKey = \"Ceres::Template.loginFailed\";\r\n\r\n                            if (response.error.message.length > 0 && response.error.message === \"user is blocked\")\r\n                            {\r\n                                translationKey = \"Ceres::Template.loginBlocked\";\r\n                            }\r\n                            NotificationService.error(\r\n                                this.$translate(translationKey)\r\n                            ).closeAfter(10000);\r\n                            break;\r\n                        default:\r\n                            return;\r\n                    }\r\n                });\r\n        },\r\n\r\n        showResetPwdView()\r\n        {\r\n            this.resetError();\r\n\r\n            this.$store.dispatch(\"loadComponent\", \"forgot-password-modal\");\r\n\r\n            Vue.nextTick(() =>\r\n            {\r\n                let modalDOM = document.querySelector('#resetPwd');\r\n                let modalVue = getContainingComponent(modalDOM);\r\n\r\n                modalVue.$data.username = this.username;\r\n\r\n                let showModal = () => ModalService.findModal(modalDOM).show();\r\n\r\n                if(this.modalElement)\r\n                {\r\n                    ModalService\r\n                        .findModal(document.getElementById(this.modalElement))\r\n                        .hide()\r\n                        .then(showModal);\r\n                }\r\n                else\r\n                {\r\n                    showModal();\r\n                }\r\n            });\r\n        },\r\n\r\n        resetError()\r\n        {\r\n            this.loginFields.forEach( element => element.classList.remove(\"has-login-error\"));\r\n            ValidationService.unmarkAllFields(\"#login-form-\" + this._uid);\r\n        }\r\n    }\r\n}\r\n</script>\r\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"login-pwd-reset\" }, [\n    _c(\"form\", { attrs: { id: \"login-form-\" + _vm._uid, method: \"post\" } }, [\n      _c(\"div\", { class: { \"modal-body\": _vm.modalElement } }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"input-unit\", attrs: { \"data-validate\": \"mail\" } },\n              [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.username,\n                      expression: \"username\"\n                    }\n                  ],\n                  attrs: {\n                    \"data-testing\": \"email-login\",\n                    type: \"email\",\n                    name: \"email\",\n                    autocomplete: \"email\",\n                    id: \"email\" + _vm._uid,\n                    \"data-autofocus\": \"\"\n                  },\n                  domProps: { value: _vm.username },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.username = $event.target.value\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"label\", { attrs: { for: \"email\" + _vm._uid } }, [\n                  _vm._v(\n                    _vm._s(_vm.$translate(\"Ceres::Template.loginEmail\")) + \"*\"\n                  )\n                ])\n              ]\n            ),\n            _vm._v(\" \"),\n            _c(\"span\", { staticClass: \"error-msg\" }, [\n              _vm._v(\n                _vm._s(_vm.$translate(\"Ceres::Template.loginEnterConfirmEmail\"))\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12\" }, [\n            _c(\n              \"div\",\n              {\n                staticClass: \"input-unit\",\n                class: { \"no-bottom\": _vm.modalElement },\n                attrs: { \"data-validate\": \"text\" }\n              },\n              [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.password,\n                      expression: \"password\"\n                    }\n                  ],\n                  attrs: {\n                    \"data-testing\": \"password-login\",\n                    type: \"password\",\n                    name: \"password\",\n                    autocomplete: \"current-password\",\n                    id: \"password\" + _vm._uid\n                  },\n                  domProps: { value: _vm.password },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.password = $event.target.value\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"label\", { attrs: { for: \"password\" + _vm._uid } }, [\n                  _vm._v(\n                    _vm._s(_vm.$translate(\"Ceres::Template.loginPassword\")) +\n                      \"*\"\n                  )\n                ])\n              ]\n            ),\n            _vm._v(\" \"),\n            _c(\"span\", { staticClass: \"error-msg\" }, [\n              _vm._v(\n                _vm._s(_vm.$translate(\"Ceres::Template.loginEmptyPassword\"))\n              )\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        {\n          class: {\n            \"modal-footer justify-content-between\": _vm.modalElement,\n            row: !_vm.modalElement\n          }\n        },\n        [\n          _c(\"div\", { class: { \"col-7 col-sm-4\": !_vm.modalElement } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"small text-appearance\",\n                attrs: { href: \"javascript:void(0)\" },\n                on: { click: _vm.showResetPwdView }\n              },\n              [\n                _vm._v(\n                  _vm._s(\n                    _vm.$translate(\"Ceres::Template.loginForgotPassword\")\n                  ) + \"?\"\n                )\n              ]\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { class: { \"col-5 col-sm-8 text-sm-right\": !_vm.modalElement } },\n            [\n              _vm._t(\"extend-overlay-buttons\"),\n              _vm._v(\" \"),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-primary btn-appearance btn-medium\",\n                  class: [\n                    { \"float-right\": !_vm.modalElement },\n                    _vm.buttonSizeClass\n                  ],\n                  attrs: {\n                    \"data-testing\": \"submit-login\",\n                    disabled: _vm.isDisabled\n                  },\n                  on: {\n                    click: function($event) {\n                      $event.preventDefault()\n                      return _vm.validateLogin($event)\n                    }\n                  }\n                },\n                [\n                  _vm._v(\n                    \"\\n                    \" +\n                      _vm._s(_vm.$translate(\"Ceres::Template.login\")) +\n                      \"\\n                    \"\n                  ),\n                  _c(\"icon\", {\n                    attrs: { icon: \"user\", loading: _vm.isDisabled }\n                  })\n                ],\n                1\n              )\n            ],\n            2\n          )\n        ]\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./Login.vue?vue&type=template&id=0f0e37b8&\"\nimport script from \"./Login.vue?vue&type=script&lang=js&\"\nexport * from \"./Login.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Duc\\\\Documents\\\\Webshop\\\\plugin-ceres\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('0f0e37b8')) {\n      api.createRecord('0f0e37b8', component.options)\n    } else {\n      api.reload('0f0e37b8', component.options)\n    }\n    module.hot.accept(\"./Login.vue?vue&type=template&id=0f0e37b8&\", function () {\n      api.rerender('0f0e37b8', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/app/components/customer/login/Login.vue\"\nexport default component.exports","import mod from \"-!../../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Login.vue?vue&type=template&id=0f0e37b8&\"","const BUTTON_SIZES = [\"btn-sm\", \"btn-lg\"];\n\nconst LEGACY_CLASS_MAP = {\n    \"sm\": \"btn-sm\",\n    \"md\": \"\",\n    \"lg\": \"btn-lg\"\n};\n\nexport const ButtonSizePropertyMixin =\n{\n    props: {\n        buttonSize:\n        {\n            type: [String, null],\n            default: null,\n            validator: value =>\n            {\n                return [\n                    \"\",\n                    ...BUTTON_SIZES,\n                    ...Object.keys(LEGACY_CLASS_MAP)\n                ].indexOf(value) !== -1;\n            }\n        }\n    },\n\n    computed: {\n        buttonSizeClass()\n        {\n            if (LEGACY_CLASS_MAP.hasOwnProperty(this.buttonSize))\n            {\n                return LEGACY_CLASS_MAP[this.buttonSize];\n            }\n\n            return this.buttonSize;\n        }\n    }\n};\n"],"sourceRoot":""}