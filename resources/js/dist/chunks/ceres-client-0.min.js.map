{"version":3,"sources":["webpack:///./resources/js/src/app/components/item/QuantityInput.vue?b65e","webpack:///resources/js/src/app/components/item/QuantityInput.vue","webpack:///./resources/js/src/app/components/item/QuantityInput.vue?f4be","webpack:///./resources/js/src/app/components/item/QuantityInput.vue","webpack:///./resources/js/src/app/components/basket/AddToBasket.vue?4bec","webpack:///resources/js/src/app/components/basket/AddToBasket.vue","webpack:///./resources/js/src/app/components/basket/AddToBasket.vue?6a66","webpack:///./resources/js/src/app/components/basket/AddToBasket.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","ref","attrs","type","disabled","waiting","$translate","domProps","value","displayValue","on","change","$event","setValue","target","_v","directives","name","rawName","isMaximum","compMax","expression","class","useAppearance","title","maximumHint","click","increaseValue","isMinimum","minimumHint","decreaseValue","_withStripped","component","options","__file","showQuantity","useLargeScale","canBeAddedToBasket","isLoading","addToBasket","icon","loading","_e","directToItem","$ceres","isItemView","quantity","timeout","min","minimumQuantity","max","maximumQuantity","interval","intervalQuantity","variationId","isSalable","allVariationsSelected","updateQuantity","handleButtonState","buttonLockState","buttonClasses","style","paddingInlineStyles","_f","_s","hasPrice","tooltipText","isWishList","role","extractPropertiesAndSurcharge","orderProperties"],"mappings":"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","file":"chunks/ceres-client-0.min.js","sourcesContent":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"qty-box d-flex h-100\" }, [\n    _c(\"input\", {\n      ref: \"quantityInputField\",\n      staticClass: \"qty-input text-center\",\n      attrs: {\n        type: \"text\",\n        disabled: _vm.waiting,\n        \"aria-label\": _vm.$translate(\"Ceres::Template.itemQuantityInput\")\n      },\n      domProps: { value: _vm.displayValue },\n      on: {\n        change: function($event) {\n          return _vm.setValue($event.target.value)\n        }\n      }\n    }),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"qty-btn-container d-flex flex-column\" }, [\n      _c(\n        \"button\",\n        {\n          directives: [\n            {\n              name: \"tooltip\",\n              rawName: \"v-tooltip\",\n              value: _vm.isMaximum && _vm.compMax !== 0,\n              expression: \"isMaximum && compMax !== 0\"\n            }\n          ],\n          staticClass:\n            \"btn qty-btn flex-fill d-flex justify-content-center p-0\",\n          class: {\n            disabled: _vm.isMaximum || _vm.waiting,\n            \"btn-appearance\": _vm.useAppearance\n          },\n          attrs: {\n            \"data-toggle\": \"tooltip\",\n            \"data-placement\": \"top\",\n            \"data-testing\": \"quantity-btn-increase\",\n            title: _vm.maximumHint,\n            \"aria-label\": _vm.$translate(\n              \"Ceres::Template.itemQuantityInputIncrease\"\n            )\n          },\n          on: {\n            click: function($event) {\n              return _vm.increaseValue()\n            }\n          }\n        },\n        [\n          _c(\"i\", {\n            staticClass: \"fa fa-plus default-float\",\n            attrs: { \"aria-hidden\": \"true\" }\n          })\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"button\",\n        {\n          directives: [\n            {\n              name: \"tooltip\",\n              rawName: \"v-tooltip\",\n              value: _vm.isMinimum && _vm.compMax !== 0,\n              expression: \"isMinimum && compMax !== 0\"\n            }\n          ],\n          staticClass:\n            \"btn qty-btn flex-fill d-flex justify-content-center p-0\",\n          class: {\n            disabled: _vm.isMinimum || _vm.waiting,\n            \"btn-appearance\": _vm.useAppearance\n          },\n          attrs: {\n            \"data-toggle\": \"tooltip\",\n            \"data-placement\": \"bottom\",\n            \"data-testing\": \"quantity-btn-decrease\",\n            title: _vm.minimumHint,\n            \"aria-label\": _vm.$translate(\n              \"Ceres::Template.itemQuantityInputDecrease\"\n            )\n          },\n          on: {\n            click: function($event) {\n              return _vm.decreaseValue()\n            }\n          }\n        },\n        [\n          _c(\"i\", {\n            staticClass: \"fa fa-minus default-float\",\n            attrs: { \"aria-hidden\": \"true\" }\n          })\n        ]\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"qty-box d-flex h-100\">\r\n        <input class=\"qty-input text-center\"\r\n               type=\"text\"\r\n               :value=\"displayValue\"\r\n               @change=\"setValue($event.target.value)\"\r\n               :disabled=\"waiting\"\r\n               ref=\"quantityInputField\"\r\n               :aria-label=\"$translate('Ceres::Template.itemQuantityInput')\">\r\n\r\n        <div class=\"qty-btn-container d-flex flex-column\">\r\n            <button class=\"btn qty-btn flex-fill d-flex justify-content-center p-0\"\r\n                 @click=\"increaseValue()\"\r\n                 :class=\"{ 'disabled': isMaximum || waiting, 'btn-appearance': useAppearance }\"\r\n                 v-tooltip=\"isMaximum && compMax !== 0\"\r\n                 data-toggle=\"tooltip\"\r\n                 data-placement=\"top\"\r\n                 data-testing=\"quantity-btn-increase\"\r\n                 :title=\"maximumHint\"\r\n                 :aria-label=\"$translate('Ceres::Template.itemQuantityInputIncrease')\">\r\n                <i class=\"fa fa-plus default-float\" aria-hidden=\"true\"></i>\r\n            </button>\r\n\r\n            <button class=\"btn qty-btn flex-fill d-flex justify-content-center p-0\"\r\n                 @click=\"decreaseValue()\"\r\n                 :class=\"{ 'disabled': isMinimum || waiting, 'btn-appearance': useAppearance }\"\r\n                 v-tooltip=\"isMinimum && compMax !== 0\"\r\n                 data-toggle=\"tooltip\"\r\n                 data-placement=\"bottom\"\r\n                 data-testing=\"quantity-btn-decrease\"\r\n                 :title=\"minimumHint\"\r\n                 :aria-label=\"$translate('Ceres::Template.itemQuantityInputDecrease')\">\r\n                <i class=\"fa fa-minus default-float\" aria-hidden=\"true\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { floatLength, formatFloat, limit } from \"../../helper/number\";\r\nimport { defaultValue, isDefined, isNullOrUndefined } from \"../../helper/utils\";\r\nimport { debounce } from \"../../helper/debounce\";\r\nimport { mapState } from \"vuex\";\r\n\r\nexport default {\r\n    name: \"quantity-input\",\r\n\r\n    props: {\r\n        value: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        timeout: {\r\n            type: Number,\r\n            required: false,\r\n            default: 500\r\n        },\r\n        min: {\r\n            type: Number,\r\n            required: false,\r\n            default: 0\r\n        },\r\n        max: {\r\n            type: Number,\r\n            required: false\r\n        },\r\n        interval: {\r\n            type: Number,\r\n            required: false,\r\n            default: 1\r\n        },\r\n        waiting: {\r\n            type: Boolean,\r\n            required: false\r\n        },\r\n        variationId: {\r\n            type: Number,\r\n            required: false\r\n        },\r\n        useAppearance: Boolean\r\n    },\r\n\r\n    data()\r\n    {\r\n        return {\r\n            compValue:      this.value,\r\n            compMin:        this.min,\r\n            compMax:        this.max,\r\n            compInterval:   this.interval,\r\n            compDecimals:   0,\r\n            onValueChanged: null\r\n        };\r\n    },\r\n\r\n    created()\r\n    {\r\n        this.compInterval = defaultValue(this.compInterval, 1);\r\n        this.compInterval = this.compInterval === 0 ? 1 : this.compInterval;\r\n\r\n        const minDecimals = floatLength(this.min);\r\n        const intervalDecimals = floatLength(this.compInterval);\r\n\r\n        this.compDecimals = Math.max(minDecimals, intervalDecimals);\r\n\r\n        this.onValueChanged = debounce(() =>\r\n        {\r\n            this.$emit(\"quantity-change\", this.compValue);\r\n        }, defaultValue(this.timeout, 500));\r\n\r\n        if (!isNullOrUndefined(this.variationId))\r\n        {\r\n            this.fetchQuantityFromBasket();\r\n        }\r\n    },\r\n\r\n    computed:\r\n    {\r\n        variationBasketQuantity()\r\n        {\r\n            if (isNullOrUndefined(this.variationId))\r\n            {\r\n                return 0;\r\n            }\r\n\r\n            if(this.itemSetVariationId <= 0 || this.variationId === this.itemSetVariationId)\r\n            {\r\n                const basketObject = this.$store.state.basket.items.find(variations => variations.variationId === this.variationId);\r\n\r\n                return basketObject ? basketObject.quantity : 0;\r\n            }\r\n\r\n            return 0;\r\n        },\r\n\r\n        isMinimum()\r\n        {\r\n            return isDefined(this.compMin) && (this.compValue - this.compInterval) < this.compMin;\r\n        },\r\n\r\n        isMaximum()\r\n        {\r\n            return isDefined(this.compMax) && (this.compValue + this.compInterval) > this.compMax;\r\n        },\r\n\r\n        minimumHint()\r\n        {\r\n            return this.$translate(\r\n                \"Ceres::Template.singleItemQuantityMin\",\r\n                {\r\n                    min: this.$options.filters.numberFormat(this.compMin)\r\n                }\r\n            );\r\n        },\r\n\r\n        maximumHint()\r\n        {\r\n            return this.$translate(\r\n                \"Ceres::Template.singleItemQuantityMax\",\r\n                {\r\n                    max: this.$options.filters.numberFormat(this.Max)\r\n                }\r\n            );\r\n        },\r\n\r\n        displayValue()\r\n        {\r\n            return this.$options.filters.numberFormat(this.compValue);\r\n        },\r\n\r\n        itemSetVariationId()\r\n        {\r\n            if (this.$store.state.items.itemSetId > 0)\r\n            {\r\n                return this.$store.getters[`${this.$store.state.items.itemSetId}/currentItemVariation`].variation.id;\r\n            }\r\n\r\n            return 0;\r\n        },\r\n\r\n        ...mapState({\r\n            basketItems: state => state.basket.items\r\n        })\r\n    },\r\n\r\n    watch:\r\n    {\r\n        basketItems:\r\n        {\r\n            handler(newValue, oldValue)\r\n            {\r\n                if (isDefined(this.variationId))\r\n                {\r\n                    this.fetchQuantityFromBasket();\r\n                }\r\n            },\r\n            deep: true\r\n        },\r\n\r\n        min(newValue)\r\n        {\r\n            this.compMin = newValue;\r\n            this.fetchQuantityFromBasket();\r\n        },\r\n\r\n        max(newValue)\r\n        {\r\n            this.compMax = newValue;\r\n            this.fetchQuantityFromBasket();\r\n        },\r\n\r\n        value(newValue, oldValue)\r\n        {\r\n            if (newValue !== oldValue)\r\n            {\r\n                this.setValue(newValue);\r\n            }\r\n        }\r\n    },\r\n\r\n    methods:\r\n    {\r\n        increaseValue()\r\n        {\r\n            const newValue = formatFloat(this.compValue + this.compInterval, this.compDecimals);\r\n\r\n            if ((isNullOrUndefined(this.compMax) || newValue <= this.compMax) && !this.waiting)\r\n            {\r\n                this.setValue(newValue);\r\n            }\r\n        },\r\n\r\n        decreaseValue()\r\n        {\r\n            const newValue = formatFloat(this.compValue - this.compInterval, this.compDecimals);\r\n\r\n            if ((isNullOrUndefined(this.compMin) || newValue >= this.compMin) && !this.waiting)\r\n            {\r\n                this.setValue(newValue);\r\n            }\r\n        },\r\n\r\n        setValue(value)\r\n        {\r\n            // consider the configured decimal seperator (if the input is typed in the input field)\r\n            if (typeof value === \"string\")\r\n            {\r\n                value = value.replace(App.decimalSeparator || \",\", \".\");\r\n            }\r\n\r\n            value = parseFloat(value);\r\n            if (isNaN(value))\r\n            {\r\n                value = defaultValue(this.compMin, 1);\r\n            }\r\n\r\n            // limit new value to min/ max value\r\n            value = limit(value, this.compMin, this.compMax);\r\n\r\n            // make sure, new value is an even multiple of interval\r\n            const diff = formatFloat((value - this.min) % this.compInterval, this.compDecimals, true);\r\n\r\n            if (diff > 0 && diff !== this.compInterval)\r\n            {\r\n                if (diff < this.compInterval / 2)\r\n                {\r\n                    value -= diff;\r\n                }\r\n                else\r\n                {\r\n                    value += this.compInterval - diff;\r\n                }\r\n                value = limit(value, this.compMin, this.compMax);\r\n            }\r\n\r\n            // cut fraction\r\n            value = formatFloat(value, this.compDecimals);\r\n\r\n            if (value !== this.compValue)\r\n            {\r\n                this.compValue = value;\r\n                this.onValueChanged();\r\n            }\r\n            else if (!isNullOrUndefined(this.$refs.quantityInputField))\r\n            {\r\n                this.$refs.quantityInputField.value = this.displayValue;\r\n            }\r\n        },\r\n\r\n        fetchQuantityFromBasket()\r\n        {\r\n            if (!isNullOrUndefined(this.min) && this.variationBasketQuantity >= this.min && this.variationBasketQuantity !== 0)\r\n            {\r\n                this.compMin = this.min % this.compInterval  || this.compInterval;\r\n            }\r\n            else if (this.variationBasketQuantity === 0)\r\n            {\r\n                this.compMin = this.min;\r\n            }\r\n\r\n            if (!isNullOrUndefined(this.max))\r\n            {\r\n                // decrease maximum quantity by quantity of variations already in basket\r\n                this.compMax = this.max - this.variationBasketQuantity;\r\n\r\n                if (this.variationBasketQuantity + this.compInterval > this.max)\r\n                {\r\n                    this.compMin = 0;\r\n                    this.compMax = 0;\r\n                    this.$emit(\"out-of-stock\", true);\r\n                }\r\n                else\r\n                {\r\n                    this.$emit(\"out-of-stock\", false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                this.$emit(\"out-of-stock\", false);\r\n            }\r\n\r\n            this.setValue(this.compMin);\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QuantityInput.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QuantityInput.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./QuantityInput.vue?vue&type=template&id=62163595&\"\nimport script from \"./QuantityInput.vue?vue&type=script&lang=js&\"\nexport * from \"./QuantityInput.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Duc\\\\Documents\\\\Webshop\\\\plugin-ceres\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('62163595')) {\n      api.createRecord('62163595', component.options)\n    } else {\n      api.reload('62163595', component.options)\n    }\n    module.hot.accept(\"./QuantityInput.vue?vue&type=template&id=62163595&\", function () {\n      api.rerender('62163595', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/app/components/item/QuantityInput.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    !_vm.showQuantity && _vm.useLargeScale && _vm.canBeAddedToBasket\n      ? _c(\n          \"div\",\n          {\n            directives: [{ name: \"tooltip\", rawName: \"v-tooltip\" }],\n            staticClass: \"add-to-basket-lg-container d-none d-lg-block\",\n            class: { \"no-pointer-events\": _vm.isLoading },\n            attrs: {\n              \"data-toggle\": \"tooltip\",\n              \"data-placement\": \"top\",\n              title: _vm.$translate(\"Ceres::Template.singleItemAddToBasket\")\n            },\n            on: {\n              click: function($event) {\n                return _vm.addToBasket()\n              }\n            }\n          },\n          [\n            _c(\"icon\", {\n              staticClass: \"fa-lg mobile-icon-right\",\n              attrs: { icon: \"cart-plus\", loading: _vm.isLoading }\n            })\n          ],\n          1\n        )\n      : _vm._e(),\n    _vm._v(\" \"),\n    !_vm.showQuantity && _vm.useLargeScale && !_vm.canBeAddedToBasket\n      ? _c(\n          \"div\",\n          {\n            directives: [{ name: \"tooltip\", rawName: \"v-tooltip\" }],\n            staticClass: \"add-to-basket-lg-container d-none d-lg-block\",\n            attrs: {\n              \"data-toggle\": \"tooltip\",\n              \"data-placement\": \"top\",\n              title: _vm.$translate(\"Ceres::Template.itemShowItem\")\n            },\n            on: {\n              click: function($event) {\n                return _vm.directToItem()\n              }\n            }\n          },\n          [\n            _c(\"i\", {\n              staticClass: \"fa fa-arrow-right fa-lg d-none d-sm-block\"\n            })\n          ]\n        )\n      : _vm._e(),\n    _vm._v(\" \"),\n    _vm.showQuantity && !_vm.useLargeScale\n      ? _c(\n          \"div\",\n          {\n            staticClass: \"d-inline\",\n            class: { \"d-lg-none\": !_vm.$ceres.isItemView }\n          },\n          [\n            _c(\"div\", { staticClass: \"add-to-basket-container\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"quantity-input-container\" },\n                [\n                  _c(\"quantity-input\", {\n                    attrs: {\n                      value: _vm.quantity,\n                      timeout: 0,\n                      min: _vm.minimumQuantity,\n                      max: _vm.maximumQuantity,\n                      interval: _vm.intervalQuantity,\n                      \"variation-id\": _vm.variationId,\n                      waiting:\n                        _vm.isLoading ||\n                        !_vm.isSalable ||\n                        !_vm.allVariationsSelected\n                    },\n                    on: {\n                      \"quantity-change\": _vm.updateQuantity,\n                      \"out-of-stock\": _vm.handleButtonState\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              !_vm.allVariationsSelected || !_vm.isSalable\n                ? _c(\n                    \"button\",\n                    {\n                      directives: [{ name: \"tooltip\", rawName: \"v-tooltip\" }],\n                      staticClass:\n                        \"btn btn-block btn-primary btn-appearance disabled\",\n                      class: _vm.buttonClasses,\n                      style: _vm.paddingInlineStyles,\n                      attrs: {\n                        \"data-toggle\": \"tooltip\",\n                        \"data-placement\": \"top\",\n                        title: _vm.tooltipText\n                      }\n                    },\n                    [\n                      _c(\"i\", {\n                        staticClass: \"fa fa-shopping-cart\",\n                        attrs: { \"aria-hidden\": \"true\" }\n                      }),\n                      _vm._v(\n                        \"\\n                \" +\n                          _vm._s(\n                            _vm.$translate(\n                              \"Ceres::Template.singleItemAddToBasket\"\n                            )\n                          ) +\n                          \"\\n            \"\n                      )\n                    ]\n                  )\n                : !_vm.buttonLockState\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn btn-block btn-primary btn-appearance\",\n                      class: _vm.buttonClasses,\n                      style: _vm.paddingInlineStyles,\n                      attrs: { disabled: _vm.isLoading || !_vm.hasPrice },\n                      on: {\n                        click: function($event) {\n                          return _vm.addToBasket()\n                        }\n                      }\n                    },\n                    [\n                      _c(\"icon\", {\n                        attrs: { icon: \"shopping-cart\", loading: _vm.isLoading }\n                      }),\n                      _vm._v(\n                        \"\\n                \" +\n                          _vm._s(\n                            _vm.$translate(\n                              \"Ceres::Template.singleItemAddToBasket\"\n                            )\n                          ) +\n                          \"\\n            \"\n                      )\n                    ],\n                    1\n                  )\n                : _c(\n                    \"button\",\n                    {\n                      directives: [{ name: \"tooltip\", rawName: \"v-tooltip\" }],\n                      staticClass:\n                        \"btn btn-block btn-primary btn-appearance disabled\",\n                      class: _vm.buttonClasses,\n                      style: _vm.paddingInlineStyles,\n                      attrs: {\n                        \"data-toggle\": \"tooltip\",\n                        \"data-placement\": \"top\",\n                        title: _vm._f(\n                          \"translate\"\n                        )(\"Ceres::Template.singleItemQuantityMax\", {\n                          max: _vm.maximumQuantity\n                        })\n                      }\n                    },\n                    [\n                      _c(\"icon\", {\n                        attrs: { icon: \"shopping-cart\", waiting: _vm.isLoading }\n                      }),\n                      _vm._v(\n                        \"\\n                \" +\n                          _vm._s(\n                            _vm.$translate(\n                              \"Ceres::Template.singleItemAddToBasket\"\n                            )\n                          ) +\n                          \"\\n            \"\n                      )\n                    ],\n                    1\n                  )\n            ])\n          ]\n        )\n      : _vm._e(),\n    _vm._v(\" \"),\n    !_vm.showQuantity && !_vm.useLargeScale\n      ? _c(\n          \"div\",\n          { staticClass: \"d-inline\", class: { \"d-lg-none\": !_vm.isWishList } },\n          [\n            _c(\n              \"div\",\n              {\n                staticClass: \"btn-group\",\n                attrs: { role: \"group\", \"aria-label\": \"Thumb Control\" }\n              },\n              [\n                _vm.canBeAddedToBasket || _vm.isWishList\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass:\n                          \"btn btn-primary btn-appearance mobile-width-button\",\n                        class: { \"no-pointer-events\": _vm.isLoading },\n                        attrs: { type: \"button\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.addToBasket()\n                          }\n                        }\n                      },\n                      [\n                        _c(\"icon\", {\n                          staticClass: \"fa-lg mobile-icon-right\",\n                          attrs: {\n                            icon: \"shopping-cart\",\n                            loading: _vm.isLoading\n                          }\n                        }),\n                        _vm._v(\n                          \"\\n                \" +\n                            _vm._s(\n                              _vm.$translate(\n                                \"Ceres::Template.singleItemAddToBasket\"\n                              )\n                            ) +\n                            \"\\n            \"\n                        )\n                      ],\n                      1\n                    )\n                  : _c(\n                      \"button\",\n                      {\n                        staticClass:\n                          \"btn btn-primary btn-appearance mobile-width-button\",\n                        attrs: { type: \"button\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.directToItem()\n                          }\n                        }\n                      },\n                      [\n                        _c(\"i\", {\n                          staticClass:\n                            \"fa fa-arrow-right fa-lg d-none d-sm-block\",\n                          attrs: { \"aria-hidden\": \"true\" }\n                        }),\n                        _vm._v(\n                          \"\\n                \" +\n                            _vm._s(\n                              _vm.$translate(\"Ceres::Template.itemShowItem\")\n                            ) +\n                            \"\\n            \"\n                        )\n                      ]\n                    )\n              ]\n            )\n          ]\n        )\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <div :class=\"{'no-pointer-events': isLoading}\" class=\"add-to-basket-lg-container d-none d-lg-block\" v-if=\"!showQuantity && useLargeScale && canBeAddedToBasket\"\r\n             v-tooltip data-toggle=\"tooltip\" data-placement=\"top\" :title=\"$translate('Ceres::Template.singleItemAddToBasket')\" @click=\"addToBasket()\">\r\n            <icon icon=\"cart-plus\" class=\"fa-lg mobile-icon-right\" :loading=\"isLoading\"></icon>\r\n        </div>\r\n\r\n        <div class=\"add-to-basket-lg-container d-none d-lg-block\" v-if=\"!showQuantity && useLargeScale && !canBeAddedToBasket\"\r\n             v-tooltip data-toggle=\"tooltip\" data-placement=\"top\" :title=\"$translate('Ceres::Template.itemShowItem')\" @click=\"directToItem()\">\r\n            <i class=\"fa fa-arrow-right fa-lg d-none d-sm-block\"></i>\r\n        </div>\r\n\r\n        <div class=\"d-inline\" v-if=\"showQuantity && !useLargeScale\" :class=\"{'d-lg-none': !$ceres.isItemView }\">\r\n            <div class=\"add-to-basket-container\">\r\n                <div class=\"quantity-input-container\">\r\n                    <quantity-input :value=\"quantity\"\r\n                                    @quantity-change=\"updateQuantity\"\r\n                                    @out-of-stock=\"handleButtonState\"\r\n                                    :timeout=\"0\"\r\n                                    :min=\"minimumQuantity\"\r\n                                    :max=\"maximumQuantity\"\r\n                                    :interval=\"intervalQuantity\"\r\n                                    :variation-id=\"variationId\"\r\n                                    :waiting=\"isLoading || !isSalable || !allVariationsSelected\">\r\n                    </quantity-input>\r\n                </div>\r\n\r\n                <button\r\n                        v-if=\"!allVariationsSelected || !isSalable\"\r\n                        class=\"btn btn-block btn-primary btn-appearance disabled\"\r\n                        v-tooltip\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        :title=\"tooltipText\"\r\n                        :class=\"buttonClasses\"\r\n                        :style=\"paddingInlineStyles\">\r\n                    <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i>\r\n                    {{ $translate(\"Ceres::Template.singleItemAddToBasket\") }}\r\n                </button>\r\n                <button\r\n                        v-else-if=\"!buttonLockState\"\r\n                        :disabled=\"isLoading || !hasPrice\"\r\n                        class=\"btn btn-block btn-primary btn-appearance\"\r\n                        @click=\"addToBasket()\"\r\n                        :class=\"buttonClasses\"\r\n                        :style=\"paddingInlineStyles\">\r\n                    <icon icon=\"shopping-cart\" :loading=\"isLoading\"></icon>\r\n                    {{ $translate(\"Ceres::Template.singleItemAddToBasket\") }}\r\n                </button>\r\n                <button v-else\r\n                        class=\"btn btn-block btn-primary btn-appearance disabled\"\r\n                        v-tooltip\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        :title=\"'Ceres::Template.singleItemQuantityMax' | translate({ max: maximumQuantity })\"\r\n                        :class=\"buttonClasses\"\r\n                        :style=\"paddingInlineStyles\">\r\n                    <icon icon=\"shopping-cart\" :waiting=\"isLoading\"></icon>\r\n                    {{ $translate(\"Ceres::Template.singleItemAddToBasket\") }}\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"d-inline\" v-if=\"!showQuantity && !useLargeScale\" :class=\"{'d-lg-none': !isWishList }\">\r\n            <div class=\"btn-group\" role=\"group\" aria-label=\"Thumb Control\">\r\n                <button type=\"button\" :class=\"{'no-pointer-events': isLoading}\" v-if=\"canBeAddedToBasket || isWishList\" class=\"btn btn-primary btn-appearance mobile-width-button\" @click=\"addToBasket()\">\r\n                    <icon icon=\"shopping-cart\" class=\"fa-lg mobile-icon-right\" :loading=\"isLoading\"></icon>\r\n                    {{ $translate(\"Ceres::Template.singleItemAddToBasket\") }}\r\n                </button>\r\n                <button type=\"button\" v-else class=\"btn btn-primary btn-appearance mobile-width-button\" @click=\"directToItem()\">\r\n                    <i class=\"fa fa-arrow-right fa-lg d-none d-sm-block\" aria-hidden=\"true\"></i>\r\n                    {{ $translate(\"Ceres::Template.itemShowItem\") }}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ExceptionMap from \"../../exceptions/ExceptionMap\";\r\nimport { navigateTo } from \"../../services/UrlService\";\r\nimport { isNullOrUndefined, isDefined } from \"../../helper/utils\";\r\nimport { mapState } from \"vuex\";\r\nimport { ButtonSizePropertyMixin } from \"../../mixins/buttonSizeProperty.mixin\";\r\nimport QuantityInput from \"../item/QuantityInput.vue\";\r\n\r\nconst NotificationService = require(\"../../services/NotificationService\");\r\n\r\nexport default {\r\n    mixins: [ButtonSizePropertyMixin],\r\n    \r\n    components:\r\n    {\r\n        QuantityInput\r\n    },\r\n\r\n    props:\r\n    {\r\n        itemUrl: String,\r\n        showQuantity:\r\n        {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        useLargeScale:\r\n        {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        variationId:\r\n        {\r\n            type: Number\r\n        },\r\n        isSalable:\r\n        {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        hasChildren:\r\n        {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        intervalQuantity:\r\n        {\r\n            type: Number,\r\n            default: 1\r\n        },\r\n        minimumQuantity:\r\n        {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        maximumQuantity:\r\n        {\r\n            type: Number,\r\n            default: null\r\n        },\r\n        orderProperties:\r\n        {\r\n            type: Array,\r\n            default: () => []\r\n        },\r\n        hasOrderProperties:\r\n        {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        hasPrice:\r\n        {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        paddingClasses:\r\n        {\r\n            type: String,\r\n            default: null\r\n        },\r\n        paddingInlineStyles:\r\n        {\r\n            type: String,\r\n            default: null\r\n        },\r\n        isWishList:\r\n        {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        propQuantity:\r\n        {\r\n            type: Number,\r\n            default: null\r\n        },\r\n        itemType:\r\n        {\r\n            type: String,\r\n            default: null\r\n        }\r\n    },\r\n\r\n    inject: {\r\n        itemId: {\r\n            default: null\r\n        }\r\n    },\r\n\r\n    computed:\r\n    {\r\n        isSet()\r\n        {\r\n            return (\r\n                this.$store.state.items[this.itemId]\r\n                && this.$store.state.items[this.itemId].variation\r\n                && this.$store.state.items[this.itemId].variation.documents[0].data.item.itemType === \"set\"\r\n            ) || this.itemType === \"set\";\r\n        },\r\n\r\n        canBeAddedToBasket()\r\n        {\r\n            return this.isSalable &&\r\n                !this.hasChildren &&\r\n                !(this.minimumQuantity != 1 || this.intervalQuantity != 1) &&\r\n                !this.requiresProperties &&\r\n                this.hasPrice &&\r\n                !this.isSet;\r\n        },\r\n\r\n        requiresProperties()\r\n        {\r\n            return App.config.item.requireOrderProperties &&\r\n                (this.hasOrderProperties || this.orderProperties.filter(property => property.property.isShownOnItemPage).length > 0);\r\n        },\r\n\r\n        buttonClasses()\r\n        {\r\n            const classes = [];\r\n\r\n            if (isDefined(this.buttonSizeClass))\r\n            {\r\n                classes.push(this.buttonSizeClass);\r\n            }\r\n\r\n            if (isDefined(this.paddingClasses))\r\n            {\r\n                classes.push(this.paddingClasses.split(\" \"));\r\n            }\r\n\r\n            return classes;\r\n        },\r\n\r\n        tooltipText()\r\n        {\r\n            if (this.hasAvailableVariations)\r\n            {\r\n                return this.$translate(\"Ceres::Template.singleItemPleaseSelectValidVariation\");\r\n            }\r\n            else\r\n            {\r\n                return this.$translate(\"Ceres::Template.singleItemPleaseSelectNotAvailable\");\r\n            }\r\n        },\r\n\r\n        variationOrderQuantity()\r\n        {\r\n            return this.$store.state.items[this.itemId] && this.$store.state.items[this.itemId].variationOrderQuantity;\r\n        },\r\n\r\n        variationMissingProperties()\r\n        {\r\n            return this.$store.getters[`${this.itemId}/variationMissingProperties`];\r\n        },\r\n\r\n        hasAvailableVariations()\r\n        {\r\n            return this.$store.state.items[this.itemId]\r\n                && this.$store.state.items[this.itemId].variationSelect\r\n                && this.$store.state.items[this.itemId].variationSelect.variations.some(variation => variation.isSalable);\r\n        },\r\n\r\n        allVariationsSelected()\r\n        {\r\n            if (this.isSet)\r\n            {\r\n                return this.$store.getters[\"itemSetAllVariationSelected\"];\r\n            }\r\n            else\r\n            {\r\n                // FIX return true if module is not registered. This equals the default value from the module\r\n                // and is required to use this component in other contexts, e.g. the category view\r\n                return !this.$store.state.items[this.itemId]\r\n                    || (this.$store.state.items[this.itemId].variationSelect\r\n                        && this.$store.state.items[this.itemId].variationSelect.isVariationSelected);\r\n            }\r\n        },\r\n\r\n        isLoading()\r\n        {\r\n            return this.$store.state.items.isAddToBasketLoading === this.variationId || this.$store.state.items.isSetLoading;\r\n        },\r\n\r\n        ...mapState({\r\n            basketItems: state => state.basket.items,\r\n            isBasketLoading: state => state.basket.isBasketLoading\r\n        })\r\n    },\r\n\r\n    data()\r\n    {\r\n        return {\r\n            quantity: 1,\r\n            buttonLockState: false\r\n        };\r\n    },\r\n\r\n    methods:\r\n    {\r\n        /**\r\n         * add an item to basket-resource\r\n         */\r\n        addToBasket()\r\n        {\r\n            this.$store.dispatch(\"loadComponent\", \"add-item-to-basket-overlay\");\r\n            this.$store.dispatch(\"loadComponent\", \"basket-preview\");\r\n\r\n            if (this.variationMissingProperties !== undefined && this.variationMissingProperties.length)\r\n            {\r\n                this.showMissingPropertiesError();\r\n            }\r\n            else if (this.isSalable || this.isSet)\r\n            {\r\n                this.$store.commit(\"setIsAddToBasketLoading\", this.variationId);\r\n\r\n                const orderParamsAndSurcharge = extractPropertiesAndSurcharge(this.orderProperties);\r\n\r\n                const basketObject =\r\n                    {\r\n                        variationId             :   this.variationId,\r\n                        quantity                :   this.quantity,\r\n                        basketItemOrderParams   :   orderParamsAndSurcharge.orderParams,\r\n                        totalOrderParamsMarkup  :   orderParamsAndSurcharge.totalSurcharge\r\n                    };\r\n\r\n                if(this.isSet)\r\n                {\r\n                    const setComponents = [];\r\n                    this.$store.state.items.setComponentIds.forEach(itemId =>\r\n                    {\r\n                        const setComponent = this.$store.getters[`${itemId}/currentItemVariation`];\r\n\r\n                        const variationId = setComponent && setComponent.variation.id;\r\n\r\n                        // Extract order properties and total surcharge for set components\r\n                        const setComponentOrderParamsAndSurcharge = extractPropertiesAndSurcharge(\r\n                            setComponent.properties.filter(prop => prop.property.isOderProperty)\r\n                        );\r\n\r\n                        setComponents.push({\r\n                            variationId: variationId,\r\n                            quantity: this.$store.state.items[itemId].variationOrderQuantity,\r\n                            basketItemOrderParams: setComponentOrderParamsAndSurcharge.orderParams,\r\n                            totalOrderParamsMarkup: setComponentOrderParamsAndSurcharge.totalSurcharge\r\n                        });\r\n                    });\r\n                    basketObject.setComponents = setComponents;\r\n                }\r\n\r\n                this.$store.dispatch(\"addBasketItem\", basketObject).then(\r\n                    response =>\r\n                    {\r\n                        document.dispatchEvent(new CustomEvent(\"afterBasketItemAdded\", { detail: basketObject }));\r\n                        this.$store.commit(\"setIsAddToBasketLoading\", 0);\r\n                    },\r\n                    error =>\r\n                    {\r\n                        this.$store.commit(\"setIsAddToBasketLoading\", 0);\r\n\r\n                        if (error.data)\r\n                        {\r\n                            NotificationService.error(\r\n                                this.$translate(\r\n                                    \"Ceres::Template.\" + ExceptionMap.get(error.data.exceptionCode.toString()),\r\n                                    error.data.placeholder\r\n                                )\r\n                            ).closeAfter(5000);\r\n                        }\r\n                    });\r\n            }\r\n        },\r\n        showMissingPropertiesError()\r\n        {\r\n            this.$store.commit(`${this.itemId}/setVariationMarkInvalidProps`, true);\r\n\r\n            const propertyNames = this.variationMissingProperties.map(property => property.property.names.name);\r\n            let errorMsgContent = \"\";\r\n\r\n            for (const name of propertyNames)\r\n            {\r\n                errorMsgContent += name + \"<br>\";\r\n            }\r\n\r\n            NotificationService.error(this.$translate(\"Ceres::Template.singleItemMissingOrderPropertiesError\").replace(\"<properties>\", errorMsgContent));\r\n        },\r\n\r\n        directToItem()\r\n        {\r\n            navigateTo(this.itemUrl);\r\n        },\r\n\r\n        handleButtonState(value)\r\n        {\r\n            this.buttonLockState = value;\r\n        },\r\n\r\n        /**\r\n         * update the property quantity of the current instance\r\n         * @param value\r\n         */\r\n        updateQuantity(value)\r\n        {\r\n            this.quantity = value;\r\n        }\r\n    },\r\n\r\n    watch:\r\n    {\r\n        quantity(value)\r\n        {\r\n            if(!isNullOrUndefined(this.itemId))\r\n            {\r\n                this.$store.commit(`${this.itemId}/setVariationOrderQuantity`, value);\r\n                this.$store.commit(`${this.itemId}/setVariationPropertySurcharges`, this.$store.getters[`${this.itemId}/variationBasePrice`]);\r\n            }\r\n        },\r\n\r\n        variationOrderQuantity(value)\r\n        {\r\n            if (this.quantity !== value)\r\n            {\r\n                this.quantity = value;\r\n            }\r\n        },\r\n\r\n        propQuantity(value)\r\n        {\r\n            if (!isNaN(value))\r\n            {\r\n                this.quantity = value;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction extractPropertiesAndSurcharge(orderProperties)\r\n{\r\n    let totalSurcharge = 0;\r\n    const orderParams = [];\r\n\r\n    orderProperties.forEach((orderProperty) =>\r\n    {\r\n        if(!isNullOrUndefined(orderProperty.property.value))\r\n        {\r\n            const property = orderProperty.property;\r\n\r\n            if (property.valueType === \"float\" &&\r\n                !isNullOrUndefined(property.value) &&\r\n                property.value.slice(-1) === App.decimalSeparator)\r\n            {\r\n                property.value = property.value.substr(0, property.value.length - 1);\r\n            }\r\n\r\n            totalSurcharge += (orderProperty.surcharge || 0) + (property.surcharge || 0);\r\n\r\n            orderParams.push({\r\n                propertyId: property.id,\r\n                type: property.valueType,\r\n                name: property.names.name,\r\n                value: property.value\r\n            });\r\n        }\r\n    });\r\n\r\n    return {\r\n        orderParams: orderParams,\r\n        totalSurcharge: totalSurcharge\r\n    };\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddToBasket.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddToBasket.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AddToBasket.vue?vue&type=template&id=729fe3ab&\"\nimport script from \"./AddToBasket.vue?vue&type=script&lang=js&\"\nexport * from \"./AddToBasket.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Duc\\\\Documents\\\\Webshop\\\\plugin-ceres\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('729fe3ab')) {\n      api.createRecord('729fe3ab', component.options)\n    } else {\n      api.reload('729fe3ab', component.options)\n    }\n    module.hot.accept(\"./AddToBasket.vue?vue&type=template&id=729fe3ab&\", function () {\n      api.rerender('729fe3ab', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/app/components/basket/AddToBasket.vue\"\nexport default component.exports"],"sourceRoot":""}