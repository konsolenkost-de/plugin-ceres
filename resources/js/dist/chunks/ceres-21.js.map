{"version":3,"sources":["webpack:///resources/js/src/app/components/common/GoogleMaps.vue","webpack:///./resources/js/src/app/components/common/GoogleMaps.vue?0c7f","webpack:///./resources/js/src/app/components/common/GoogleMaps.vue","webpack:///./resources/js/src/app/components/common/GoogleMaps.vue?fc6f","webpack:///./resources/js/src/app/components/common/GoogleMaps.vue?672f"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA;AACA;AAEA;AACA;AACA,aACA;AACA,kBADA;AAEA;AAFA,KAFA;AAMA,SACA;AACA,kBADA;AAEA;AAFA,KAPA;AAWA,SACA;AACA,kBADA;AAEA;AAFA,KAZA;AAgBA,UACA;AACA,kBADA;AAEA;AAFA,KAjBA;AAqBA,aACA;AACA,kBADA;AAEA;AAFA,KAtBA;AA0BA,iBACA;AACA,kBADA;AAEA;AAFA;AA3BA,GADA;AAkCA,wBACA;AACA;AACA;AADA;AAGA,GAvCA;AAyCA,YACA;AACA,eADA,yBAEA;AACA;AACA;AAJA,GA1CA;AAiDA,SAjDA,qBAkDA;AAAA;;AACA,+BACA;AACA,2BACA,IADA,CACA,YACA;AACA;AACA,OAJA,EAKA,KALA,CAKA,YACA,CACA;AACA,OARA;AASA,KAXA;AAYA,GA/DA;AAiEA,WACA;AACA,gBADA,0BAEA;AAAA;;AACA,oDACA;AACA;;AAEA,8FACA;AACA;AACA;;AACA,sGACA;AACA;AACA;AAAA;AAAA;AACA,WAJA,MAMA;AACA;AACA;AACA;AACA,SAdA,MAgBA;AACA;AACA,sFACA,kBADA,EAEA,YACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA,WAfA,EAgBA,YACA;AACA;AACA,WAnBA;AAoBA;AACA,OA3CA;AA4CA,KA/CA;AAiDA,kBAjDA,4BAkDA;AAAA;;AACA;AACA;;AAEA,oCACA;AACA;AACA,uBADA;AAEA;AAFA;AAIA,OANA,MAOA,uCACA;AACA,sDACA;AACA;AACA,2BACA;AACA;AADA,WADA,EAIA,0BACA;AACA,uEACA;AACA;AACA,aAHA,MAKA;AACA;AACA;AACA,WAdA;AAgBA,SAnBA;AAoBA;;AAEA;AACA,KAtFA;AAwFA,iBAxFA,2BAyFA;AAAA;;AACA,4BACA,IADA,CACA,uBACA;AACA,wEACA;AACA,6BADA;AAEA,2BAFA;AAGA;AAHA,SADA;AAOA,+BACA;AACA,kBADA;AAEA;AAFA,SADA;AAMA,OAhBA;AAiBA;AA3GA;AAlEA,G;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAyF;AAC3B;AACL;;;AAGzD;AACsG;AACtG,gBAAgB,2GAAU;AAC1B,EAAE,gFAAM;AACR,EAAE,qFAAM;AACR,EAAE,8FAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACtCf;AAAA;AAAA,wCAAkM,CAAgB,8OAAG,EAAC,C;;;;;;;;;;;;ACAtN;AAAA;AAAA;AAAA;AAAA;AAAA","file":"chunks/ceres-21.js","sourcesContent":["<template>\r\n    <div :class=\"aspectClass\" class=\"maps-component position-relative\" ref=\"googleMapsContainer\">\r\n        <div v-if=\"scriptBlocked\">\r\n            <slot></slot>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { whenConsented } from \"../../helper/whenConsented\";\r\nimport { isNullOrUndefined } from \"../../helper/utils\";\r\n\r\nexport default {\r\n    props: {\r\n        address:\r\n        {\r\n            type: String,\r\n            required: false\r\n        },\r\n        lat:\r\n        {\r\n            type: Number,\r\n            required: false\r\n        },\r\n        lng:\r\n        {\r\n            type: Number,\r\n            required: false\r\n        },\r\n        zoom:\r\n        {\r\n            type: Number,\r\n            default: 16\r\n        },\r\n        maptype:\r\n        {\r\n            type: String,\r\n            default: \"roadmap\"\r\n        },\r\n        aspectRatio:\r\n        {\r\n            type: String,\r\n            default: \"3-1\"\r\n        }\r\n    },\r\n\r\n    data: function()\r\n    {\r\n        return {\r\n            scriptBlocked: true\r\n        };\r\n    },\r\n\r\n    computed:\r\n    {\r\n        aspectClass()\r\n        {\r\n            return \"prop-\" + this.aspectRatio;\r\n        }\r\n    },\r\n\r\n    mounted()\r\n    {\r\n        this.$nextTick(() =>\r\n        {\r\n            this.createScript()\r\n                .then(() =>\r\n                {\r\n                    this.initializeMap();\r\n                })\r\n                .catch(() =>\r\n                {\r\n                    // Do nothing\r\n                });\r\n        });\r\n    },\r\n\r\n    methods:\r\n    {\r\n        createScript()\r\n        {\r\n            return new Promise((resolve, reject) =>\r\n            {\r\n                const script = document.querySelector(\"script#google-maps-api\");\r\n\r\n                if (!isNullOrUndefined(script))\r\n                {\r\n                    // script already injected...\r\n                    this.scriptBlocked = false;\r\n                    if (isNullOrUndefined(window.google))\r\n                    {\r\n                        // ...but not loaded yet\r\n                        script.addEventListener(\"load\", () => resolve(script), false);\r\n                    }\r\n                    else\r\n                    {\r\n                        // ..and fully loaded\r\n                        resolve(script);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    // script not loaded\r\n                    whenConsented(\r\n                        \"media.googleMaps\",\r\n                        () =>\r\n                        {\r\n                            this.scriptBlocked = false;\r\n                            const script = document.createElement(\"script\");\r\n\r\n                            script.type = \"text/javascript\";\r\n                            script.id = \"google-maps-api\";\r\n                            script.src = `https://maps.googleapis.com/maps/api/js?key=${App.config.global.googleMapsApiKey}`;\r\n\r\n                            script.addEventListener(\"load\", () => resolve(script), false);\r\n                            script.addEventListener(\"error\", () => reject(script), false);\r\n\r\n                            document.body.appendChild(script);\r\n                        },\r\n                        () =>\r\n                        {\r\n                            this.scriptBlocked = true;\r\n                        });\r\n                }\r\n            });\r\n        },\r\n\r\n        getCoordinates()\r\n        {\r\n            const isLatValid = !isNaN(this.lat) && this.lat > -90 && this.lat < 90;\r\n            const isLngValid = !isNaN(this.lng) && this.lng > -180 && this.lng < 180;\r\n\r\n            if (isLatValid && isLngValid)\r\n            {\r\n                return Promise.resolve({\r\n                    lat: this.lat,\r\n                    lng: this.lng\r\n                });\r\n            }\r\n            else if(!!this.address && !!window.google)\r\n            {\r\n                return new Promise((resolve, reject) =>\r\n                {\r\n                    const geocoder = new google.maps.Geocoder();\r\n                    geocoder.geocode(\r\n                        {\r\n                            address: this.address\r\n                        },\r\n                        (result, status) =>\r\n                        {\r\n                            if(!!result && result.length > 0 && !!result[0].geometry)\r\n                            {\r\n                                resolve(result[0].geometry.location);\r\n                            }\r\n                            else\r\n                            {\r\n                                reject();\r\n                            }\r\n                        }\r\n                    );\r\n                });\r\n            }\r\n\r\n            return Promise.reject();\r\n        },\r\n\r\n        initializeMap()\r\n        {\r\n            this.getCoordinates()\r\n                .then((coordinates) =>\r\n                {\r\n                    const map = new google.maps.Map(this.$refs.googleMapsContainer,\r\n                        {\r\n                            center: coordinates,\r\n                            zoom  : this.zoom,\r\n                            mapTypeId: this.maptype\r\n                        });\r\n\r\n                    new google.maps.Marker(\r\n                        {\r\n                            map: map,\r\n                            position: coordinates\r\n                        });\r\n\r\n                });\r\n        }\r\n    }\r\n}\r\n</script>\r\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      ref: \"googleMapsContainer\",\n      staticClass: \"maps-component position-relative\",\n      class: _vm.aspectClass\n    },\n    [_vm.scriptBlocked ? _c(\"div\", [_vm._t(\"default\")], 2) : _vm._e()]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./GoogleMaps.vue?vue&type=template&id=5bf88bf2&\"\nimport script from \"./GoogleMaps.vue?vue&type=script&lang=js&\"\nexport * from \"./GoogleMaps.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Probetag\\\\Documents\\\\Git\\\\plugin-ceres\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('5bf88bf2')) {\n      api.createRecord('5bf88bf2', component.options)\n    } else {\n      api.reload('5bf88bf2', component.options)\n    }\n    module.hot.accept(\"./GoogleMaps.vue?vue&type=template&id=5bf88bf2&\", function () {\n      api.rerender('5bf88bf2', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/app/components/common/GoogleMaps.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GoogleMaps.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GoogleMaps.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GoogleMaps.vue?vue&type=template&id=5bf88bf2&\""],"sourceRoot":""}